OPENQASM 2.0;
include "qelib1.inc";

qreg node[3];
creg meas[3];
sx node[0];
sx node[1];
sx node[2];
rz(0.5*pi) node[0];
rz(0.5*pi) node[1];
rz(0.5*pi) node[2];
sx node[0];
sx node[1];
sx node[2];
rz(0.8760892335468831*pi) node[1];
cx node[1],node[2];
rz(3.623823891156097*pi) node[2];
cx node[1],node[2];
cx node[1],node[0];
rz(0.8767570476880966*pi) node[2];
rz(3.6238372920023054*pi) node[0];
cx node[1],node[0];
sx node[1];
rz(3.357654961637402*pi) node[1];
sx node[1];
rz(0.7420545226100752*pi) node[1];
cx node[2],node[1];
cx node[1],node[2];
cx node[2],node[1];
cx node[1],node[0];
rz(3.623823541015222*pi) node[0];
cx node[1],node[0];
rz(0.8758446442303391*pi) node[0];
sx node[1];
sx node[0];
rz(3.357654961637402*pi) node[1];
rz(3.357654961637402*pi) node[0];
sx node[1];
sx node[0];
rz(0.5*pi) node[1];
rz(0.5*pi) node[0];
cx node[2],node[1];
rz(0.2580050628377346*pi) node[1];
cx node[2],node[1];
rz(0.24159648741625328*pi) node[1];
cx node[0],node[1];
cx node[1],node[0];
cx node[0],node[1];
cx node[2],node[1];
rz(0.2579958859637159*pi) node[1];
cx node[2],node[1];
cx node[0],node[1];
sx node[2];
rz(0.2580053111194458*pi) node[1];
rz(3.7753808238686015*pi) node[2];
cx node[0],node[1];
sx node[2];
sx node[0];
rz(0.24222227828629284*pi) node[1];
rz(0.6186025023244939*pi) node[2];
rz(3.7753808238686015*pi) node[0];
sx node[1];
sx node[0];
rz(3.7753808238686015*pi) node[1];
rz(0.5*pi) node[0];
sx node[1];
rz(0.5*pi) node[1];
cx node[2],node[1];
cx node[1],node[2];
cx node[2],node[1];
cx node[1],node[0];
rz(2.381023588723952*pi) node[0];
cx node[1],node[0];
rz(0.1214766750755939*pi) node[0];
cx node[1],node[2];
rz(2.3810811709823625*pi) node[2];
cx node[1],node[2];
sx node[1];
rz(3.8414487463800797*pi) node[1];
sx node[1];
rz(0.5*pi) node[1];
cx node[2],node[1];
cx node[1],node[2];
cx node[2],node[1];
cx node[0],node[1];
rz(2.3810220290055097*pi) node[1];
cx node[0],node[1];
sx node[0];
rz(0.11754984198158869*pi) node[1];
rz(3.8414487463800797*pi) node[0];
sx node[1];
sx node[0];
rz(3.8414487463800797*pi) node[1];
rz(0.5*pi) node[0];
sx node[1];
rz(0.5*pi) node[1];
barrier node[1],node[0],node[2];
measure node[1] -> meas[0];
measure node[0] -> meas[1];
measure node[2] -> meas[2];
