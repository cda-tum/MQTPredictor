OPENQASM 2.0;
include "qelib1.inc";

qreg node[9];
creg meas[7];
sx node[0];
sx node[1];
sx node[2];
sx node[3];
sx node[4];
sx node[5];
rz(0.5*pi) node[8];
rz(3.1263859945362285*pi) node[0];
rz(3.2019292746062282*pi) node[1];
rz(3.0578808188374946*pi) node[2];
rz(3.292434936364968*pi) node[3];
rz(3.255923136272914*pi) node[4];
rz(3.1716981891687728*pi) node[5];
sx node[8];
sx node[0];
sx node[1];
sx node[2];
sx node[3];
sx node[4];
sx node[5];
rz(3.5*pi) node[8];
rz(1.0*pi) node[0];
rz(1.0*pi) node[1];
rz(1.0*pi) node[2];
rz(1.0*pi) node[3];
rz(1.0*pi) node[4];
rz(1.0*pi) node[5];
sx node[8];
cx node[1],node[0];
rz(0.7942768753367195*pi) node[8];
cx node[1],node[2];
cx node[1],node[4];
cx node[2],node[1];
cx node[1],node[2];
cx node[2],node[1];
cx node[0],node[1];
cx node[2],node[3];
cx node[0],node[1];
cx node[2],node[3];
cx node[1],node[0];
cx node[3],node[2];
cx node[0],node[1];
cx node[2],node[3];
cx node[1],node[4];
cx node[3],node[5];
cx node[1],node[2];
cx node[3],node[5];
cx node[1],node[2];
cx node[5],node[3];
cx node[2],node[1];
cx node[3],node[5];
cx node[1],node[2];
cx node[5],node[8];
cx node[0],node[1];
cx node[2],node[3];
sx node[5];
cx node[1],node[0];
cx node[2],node[3];
rz(3.0327802632591214*pi) node[5];
cx node[0],node[1];
cx node[3],node[2];
sx node[5];
cx node[1],node[4];
cx node[2],node[3];
rz(1.0*pi) node[5];
cx node[1],node[0];
cx node[8],node[5];
cx node[1],node[2];
cx node[5],node[8];
cx node[1],node[2];
cx node[8],node[5];
cx node[2],node[1];
cx node[3],node[5];
cx node[1],node[2];
sx node[3];
cx node[4],node[1];
rz(3.0104568469084785*pi) node[3];
cx node[1],node[4];
sx node[3];
cx node[4],node[1];
rz(1.0*pi) node[3];
cx node[1],node[0];
cx node[5],node[3];
cx node[1],node[4];
cx node[3],node[5];
cx node[5],node[3];
cx node[2],node[3];
cx node[8],node[5];
sx node[2];
cx node[8],node[5];
rz(3.1243463029464884*pi) node[2];
cx node[5],node[8];
sx node[2];
cx node[8],node[5];
rz(1.0*pi) node[2];
cx node[2],node[3];
cx node[3],node[2];
cx node[2],node[3];
cx node[1],node[2];
cx node[5],node[3];
sx node[1];
cx node[5],node[3];
rz(3.0514737452391976*pi) node[1];
cx node[3],node[5];
sx node[1];
cx node[5],node[3];
rz(1.0*pi) node[1];
cx node[8],node[5];
cx node[1],node[2];
cx node[8],node[5];
cx node[2],node[1];
cx node[5],node[8];
cx node[1],node[2];
cx node[8],node[5];
cx node[0],node[1];
cx node[3],node[2];
cx node[1],node[0];
cx node[2],node[3];
cx node[0],node[1];
cx node[3],node[2];
cx node[1],node[4];
cx node[2],node[3];
cx node[1],node[0];
cx node[5],node[3];
sx node[1];
cx node[5],node[3];
rz(3.025592651297149*pi) node[1];
cx node[3],node[5];
sx node[1];
cx node[5],node[3];
rz(1.0*pi) node[1];
cx node[8],node[5];
cx node[2],node[1];
cx node[8],node[5];
cx node[1],node[2];
cx node[5],node[8];
cx node[2],node[1];
cx node[8],node[5];
cx node[1],node[2];
cx node[4],node[1];
cx node[3],node[2];
cx node[1],node[4];
cx node[2],node[3];
cx node[4],node[1];
cx node[3],node[2];
cx node[1],node[0];
cx node[2],node[3];
rz(0.29464726925584583*pi) node[0];
sx node[1];
cx node[5],node[3];
rz(3.049894663664375*pi) node[1];
cx node[5],node[3];
sx node[1];
cx node[3],node[5];
rz(1.0*pi) node[1];
cx node[5],node[3];
cx node[4],node[1];
cx node[8],node[5];
cx node[2],node[1];
cx node[8],node[5];
cx node[1],node[2];
cx node[5],node[8];
cx node[2],node[1];
cx node[8],node[5];
cx node[1],node[2];
cx node[0],node[1];
cx node[3],node[2];
cx node[1],node[0];
cx node[2],node[3];
cx node[0],node[1];
cx node[3],node[2];
cx node[4],node[1];
cx node[2],node[3];
cx node[0],node[1];
cx node[5],node[3];
sx node[4];
sx node[0];
cx node[2],node[1];
cx node[5],node[3];
rz(3.2738499597676216*pi) node[4];
rz(3.0639602886140618*pi) node[0];
sx node[2];
cx node[3],node[5];
sx node[4];
sx node[0];
rz(3.1505495196771873*pi) node[2];
cx node[5],node[3];
rz(1.0*pi) node[4];
rz(1.0*pi) node[0];
sx node[2];
cx node[8],node[5];
rz(1.0*pi) node[2];
cx node[8],node[5];
cx node[1],node[2];
cx node[5],node[8];
cx node[2],node[1];
cx node[8],node[5];
cx node[1],node[2];
cx node[4],node[1];
cx node[3],node[2];
cx node[1],node[4];
sx node[3];
cx node[4],node[1];
rz(3.1286779520021164*pi) node[3];
cx node[1],node[0];
sx node[3];
cx node[1],node[4];
rz(1.0*pi) node[3];
cx node[2],node[3];
cx node[3],node[2];
cx node[2],node[3];
cx node[1],node[2];
cx node[5],node[3];
cx node[1],node[2];
sx node[5];
cx node[2],node[1];
rz(3.300674134809124*pi) node[5];
cx node[1],node[2];
sx node[5];
cx node[0],node[1];
rz(1.0*pi) node[5];
cx node[1],node[0];
cx node[5],node[3];
cx node[0],node[1];
cx node[3],node[5];
cx node[1],node[4];
cx node[5],node[3];
cx node[1],node[0];
cx node[2],node[3];
cx node[8],node[5];
cx node[2],node[3];
rz(0.3082832443122214*pi) node[5];
sx node[8];
cx node[3],node[2];
rz(3.0042765677369476*pi) node[8];
cx node[2],node[3];
sx node[8];
cx node[1],node[2];
rz(1.0*pi) node[8];
cx node[1],node[2];
cx node[8],node[5];
cx node[2],node[1];
cx node[5],node[8];
cx node[1],node[2];
cx node[8],node[5];
cx node[4],node[1];
cx node[3],node[5];
cx node[1],node[4];
cx node[5],node[3];
cx node[4],node[1];
cx node[3],node[5];
cx node[1],node[0];
cx node[5],node[3];
cx node[1],node[4];
cx node[2],node[3];
cx node[5],node[8];
cx node[2],node[3];
sx node[5];
cx node[3],node[2];
rz(3.1868280375109013*pi) node[5];
cx node[2],node[3];
sx node[5];
cx node[1],node[2];
rz(1.0*pi) node[5];
cx node[1],node[2];
cx node[8],node[5];
cx node[2],node[1];
cx node[5],node[8];
cx node[1],node[2];
cx node[8],node[5];
cx node[0],node[1];
cx node[3],node[5];
cx node[1],node[0];
sx node[3];
cx node[0],node[1];
rz(3.2955673709195965*pi) node[3];
cx node[1],node[4];
sx node[3];
cx node[1],node[0];
rz(1.0*pi) node[3];
cx node[5],node[3];
cx node[3],node[5];
cx node[5],node[3];
cx node[2],node[3];
sx node[2];
rz(3.227801012065442*pi) node[2];
sx node[2];
rz(1.0*pi) node[2];
cx node[3],node[2];
cx node[2],node[3];
cx node[3],node[2];
cx node[1],node[2];
sx node[1];
rz(3.2167082488266523*pi) node[1];
sx node[1];
rz(1.0*pi) node[1];
cx node[4],node[1];
cx node[1],node[4];
cx node[4],node[1];
cx node[1],node[0];
cx node[1],node[2];
sx node[1];
rz(3.1707128150212402*pi) node[1];
sx node[1];
rz(1.0*pi) node[1];
cx node[2],node[1];
cx node[1],node[2];
cx node[2],node[1];
cx node[0],node[1];
sx node[0];
rz(3.5973726129701946*pi) node[1];
rz(3.2848007197038362*pi) node[0];
sx node[1];
sx node[0];
rz(3.5*pi) node[1];
rz(1.0*pi) node[0];
sx node[1];
rz(1.5*pi) node[1];
barrier node[8],node[5],node[3],node[4],node[2],node[0],node[1];
measure node[8] -> meas[0];
measure node[5] -> meas[1];
measure node[3] -> meas[2];
measure node[4] -> meas[3];
measure node[2] -> meas[4];
measure node[0] -> meas[5];
measure node[1] -> meas[6];
