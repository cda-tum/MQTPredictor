OPENQASM 2.0;
include "qelib1.inc";
gate rzx(param0) q0,q1 { h q1; cx q0,q1; rz(param0) q1; cx q0,q1; h q1; }
gate ecr q0,q1 { rzx(pi/4) q0,q1; x q0; rzx(-pi/4) q0,q1; }

qreg node[8];
creg meas[4];
rz(0.5*pi) node[4];
rz(0.5*pi) node[5];
sx node[6];
rz(0.5*pi) node[7];
sx node[4];
sx node[5];
rz(0.46616271269808485*pi) node[6];
sx node[7];
rz(1.5*pi) node[4];
rz(1.5*pi) node[5];
sx node[6];
rz(1.5*pi) node[7];
sx node[4];
sx node[5];
x node[6];
sx node[7];
rz(0.8792282890124363*pi) node[4];
rz(0.8565731749196935*pi) node[5];
rz(3.5*pi) node[6];
rz(3.6610005589448855*pi) node[7];
sx node[4];
sx node[5];
sx node[7];
ecr node[6],node[5];
sx node[5];
x node[6];
rz(2.5*pi) node[5];
rz(3.5*pi) node[6];
sx node[5];
rz(1.5*pi) node[5];
sx node[5];
ecr node[6],node[5];
x node[5];
x node[6];
rz(3.5*pi) node[5];
rz(3.5*pi) node[6];
ecr node[5],node[4];
sx node[4];
sx node[5];
ecr node[6],node[5];
x node[5];
x node[6];
rz(3.5*pi) node[5];
rz(3.5*pi) node[6];
ecr node[5],node[4];
ecr node[6],node[7];
sx node[4];
x node[5];
sx node[6];
x node[7];
rz(3.5*pi) node[5];
rz(3.530204430362783*pi) node[6];
rz(3.5*pi) node[7];
ecr node[5],node[4];
sx node[6];
sx node[4];
x node[5];
rz(1.0*pi) node[6];
rz(2.5*pi) node[4];
rz(3.5*pi) node[5];
sx node[6];
sx node[4];
ecr node[7],node[6];
rz(1.5*pi) node[4];
x node[6];
sx node[7];
x node[4];
rz(3.5*pi) node[6];
rz(3.5*pi) node[4];
ecr node[6],node[7];
sx node[6];
x node[7];
rz(3.5*pi) node[7];
ecr node[7],node[6];
sx node[6];
ecr node[5],node[6];
sx node[5];
x node[6];
rz(3.80538296953593*pi) node[5];
rz(3.5*pi) node[6];
sx node[5];
rz(1.0*pi) node[5];
sx node[5];
ecr node[6],node[5];
x node[5];
sx node[6];
rz(3.5*pi) node[5];
ecr node[5],node[6];
sx node[5];
x node[6];
rz(3.5*pi) node[6];
ecr node[6],node[5];
sx node[5];
ecr node[4],node[5];
sx node[4];
rz(1.4084028519585572*pi) node[5];
rz(0.6262344628178815*pi) node[4];
sx node[5];
sx node[4];
rz(0.5*pi) node[5];
rz(1.0*pi) node[4];
sx node[5];
rz(1.5*pi) node[5];
barrier node[7],node[6],node[4],node[5];
measure node[7] -> meas[0];
measure node[6] -> meas[1];
measure node[4] -> meas[2];
measure node[5] -> meas[3];
