OPENQASM 2.0;
include "qelib1.inc";

qreg node[127];
creg meas[4];
sx node[123];
sx node[124];
sx node[125];
sx node[126];
rz(0.5*pi) node[123];
rz(0.5*pi) node[124];
rz(0.5*pi) node[125];
rz(0.5*pi) node[126];
sx node[123];
sx node[124];
sx node[125];
sx node[126];
rz(3.500686921263465*pi) node[125];
cx node[125],node[124];
rz(3.1464650863328325*pi) node[124];
cx node[125],node[124];
rz(3.4989147628031256*pi) node[124];
cx node[125],node[126];
rz(3.1463513223795103*pi) node[126];
cx node[125],node[126];
cx node[125],node[124];
cx node[124],node[125];
cx node[125],node[124];
cx node[124],node[123];
cx node[125],node[126];
rz(3.146427080132422*pi) node[123];
rz(3.146361508295868*pi) node[126];
cx node[124],node[123];
cx node[125],node[126];
sx node[124];
rz(3.4957076315448807*pi) node[126];
rz(3.8991109324031483*pi) node[124];
sx node[124];
rz(2.00014584106077*pi) node[124];
cx node[123],node[124];
cx node[124],node[123];
cx node[123],node[124];
cx node[125],node[124];
rz(3.1464580198533594*pi) node[124];
cx node[125],node[124];
sx node[125];
rz(3.8991109324031483*pi) node[125];
sx node[125];
rz(1.5*pi) node[125];
cx node[125],node[124];
cx node[124],node[125];
cx node[125],node[124];
cx node[123],node[124];
cx node[126],node[125];
rz(0.6680096471456869*pi) node[124];
rz(3.1464246291462983*pi) node[125];
cx node[123],node[124];
cx node[126],node[125];
rz(0.4997695987752997*pi) node[124];
rz(3.4979524801862034*pi) node[125];
sx node[126];
cx node[123],node[124];
sx node[125];
rz(3.8991109324031483*pi) node[126];
cx node[124],node[123];
rz(3.8991109324031483*pi) node[125];
sx node[126];
cx node[123],node[124];
sx node[125];
rz(1.5*pi) node[126];
rz(1.5*pi) node[125];
cx node[126],node[125];
cx node[125],node[126];
cx node[126],node[125];
cx node[124],node[125];
rz(0.6679855192563142*pi) node[125];
cx node[124],node[125];
cx node[125],node[124];
cx node[124],node[125];
cx node[125],node[124];
cx node[123],node[124];
cx node[125],node[126];
rz(0.6679876519325516*pi) node[124];
rz(0.6680015939055666*pi) node[126];
cx node[123],node[124];
cx node[125],node[126];
rz(0.4990887020977639*pi) node[124];
sx node[125];
cx node[123],node[124];
rz(3.994860265040618*pi) node[125];
cx node[124],node[123];
sx node[125];
cx node[123],node[124];
rz(1.0004412644661351*pi) node[125];
cx node[126],node[125];
cx node[125],node[126];
cx node[126],node[125];
cx node[124],node[125];
rz(0.668008151089222*pi) node[125];
cx node[124],node[125];
sx node[124];
rz(3.994860265040618*pi) node[124];
sx node[124];
rz(0.5*pi) node[124];
cx node[125],node[124];
cx node[124],node[125];
cx node[125],node[124];
cx node[123],node[124];
cx node[126],node[125];
rz(0.6680010527787599*pi) node[124];
rz(2.02122079472787*pi) node[125];
cx node[123],node[124];
cx node[126],node[125];
sx node[123];
rz(0.499565307490347*pi) node[124];
rz(0.4993028609891884*pi) node[125];
rz(3.994860265040618*pi) node[123];
sx node[124];
cx node[126],node[125];
sx node[123];
rz(3.994860265040618*pi) node[124];
cx node[125],node[126];
rz(0.5*pi) node[123];
sx node[124];
cx node[126],node[125];
rz(0.5*pi) node[124];
cx node[123],node[124];
cx node[124],node[123];
cx node[123],node[124];
cx node[125],node[124];
rz(2.0211477107780023*pi) node[124];
cx node[125],node[124];
cx node[125],node[124];
cx node[124],node[125];
cx node[125],node[124];
cx node[124],node[123];
cx node[126],node[125];
rz(2.0211963803596*pi) node[123];
rz(2.021154267961658*pi) node[125];
cx node[124],node[123];
cx node[126],node[125];
sx node[124];
rz(0.4972426639128411*pi) node[125];
rz(3.1070858182761487*pi) node[124];
sx node[124];
rz(0.5*pi) node[124];
cx node[123],node[124];
cx node[124],node[123];
cx node[123],node[124];
cx node[124],node[125];
cx node[125],node[124];
cx node[124],node[125];
cx node[126],node[125];
rz(2.021216242896498*pi) node[125];
cx node[126],node[125];
cx node[124],node[125];
sx node[126];
rz(2.0211948206411576*pi) node[125];
rz(3.1070858182761487*pi) node[126];
cx node[124],node[125];
sx node[126];
sx node[124];
rz(0.49868473502120814*pi) node[125];
rz(0.5*pi) node[126];
rz(3.1070858182761487*pi) node[124];
sx node[125];
sx node[124];
rz(3.1070858182761487*pi) node[125];
rz(0.5*pi) node[124];
sx node[125];
rz(0.5*pi) node[125];
barrier node[125],node[124],node[126],node[123];
measure node[125] -> meas[0];
measure node[124] -> meas[1];
measure node[126] -> meas[2];
measure node[123] -> meas[3];
