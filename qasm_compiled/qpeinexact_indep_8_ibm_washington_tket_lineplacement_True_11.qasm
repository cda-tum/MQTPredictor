OPENQASM 2.0;
include "qelib1.inc";

qreg node[126];
creg c[7];
sx node[103];
sx node[104];
sx node[111];
rz(1.5*pi) node[121];
sx node[122];
sx node[123];
rz(2.925781243151425*pi) node[124];
sx node[125];
rz(0.5*pi) node[103];
rz(0.5*pi) node[111];
sx node[121];
rz(0.5*pi) node[122];
rz(0.5*pi) node[123];
x node[124];
rz(0.5*pi) node[125];
sx node[103];
sx node[111];
rz(0.5*pi) node[121];
sx node[122];
sx node[123];
rz(0.5*pi) node[124];
sx node[125];
sx node[121];
cx node[124],node[125];
rz(0.5*pi) node[121];
rz(3.574218749056618*pi) node[125];
cx node[124],node[125];
cx node[124],node[123];
rz(0.4335937509433814*pi) node[125];
rz(0.14843750015366886*pi) node[123];
cx node[124],node[123];
rz(1.8671874998463305*pi) node[123];
cx node[124],node[123];
cx node[123],node[124];
cx node[124],node[123];
cx node[123],node[122];
rz(0.29687499394114014*pi) node[122];
cx node[123],node[122];
rz(1.7343750060588596*pi) node[122];
cx node[123],node[122];
cx node[122],node[123];
cx node[123],node[122];
cx node[122],node[111];
rz(3.5937499999999996*pi) node[111];
cx node[122],node[111];
rz(0.46875*pi) node[111];
rz(0.5*pi) node[122];
sx node[122];
rz(3.5*pi) node[122];
sx node[122];
rz(1.0*pi) node[122];
cx node[122],node[121];
rz(0.5*pi) node[122];
sx node[122];
rz(0.8125000000000007*pi) node[122];
sx node[122];
rz(1.5*pi) node[122];
cx node[122],node[121];
cx node[122],node[111];
sx node[121];
cx node[111],node[122];
rz(3.5*pi) node[121];
cx node[122],node[111];
sx node[121];
cx node[111],node[104];
rz(0.4375000000000001*pi) node[121];
rz(1.5*pi) node[111];
cx node[121],node[122];
sx node[111];
cx node[122],node[121];
rz(0.37499999999999956*pi) node[111];
cx node[121],node[122];
sx node[111];
rz(1.0*pi) node[111];
cx node[111],node[104];
sx node[104];
rz(0.5*pi) node[111];
rz(2.5*pi) node[104];
sx node[111];
sx node[104];
rz(3.5*pi) node[111];
rz(2.375*pi) node[104];
sx node[111];
cx node[103],node[104];
rz(1.0*pi) node[111];
cx node[104],node[103];
cx node[103],node[104];
cx node[111],node[104];
rz(3.75*pi) node[104];
cx node[111],node[104];
rz(1.25*pi) node[104];
sx node[104];
rz(3.5*pi) node[104];
sx node[104];
rz(1.0*pi) node[104];
cx node[103],node[104];
rz(0.25*pi) node[104];
cx node[103],node[104];
rz(0.5*pi) node[103];
rz(3.75*pi) node[104];
sx node[103];
cx node[104],node[111];
rz(3.5*pi) node[103];
cx node[111],node[104];
sx node[103];
cx node[104],node[111];
rz(1.0*pi) node[103];
cx node[122],node[111];
cx node[103],node[104];
rz(0.125*pi) node[111];
cx node[104],node[103];
cx node[122],node[111];
cx node[103],node[104];
rz(3.875*pi) node[111];
cx node[122],node[111];
cx node[111],node[122];
cx node[122],node[111];
cx node[111],node[104];
cx node[121],node[122];
rz(0.25*pi) node[104];
rz(0.0625*pi) node[122];
cx node[111],node[104];
cx node[121],node[122];
rz(3.75*pi) node[104];
rz(0.5*pi) node[111];
rz(3.9375*pi) node[122];
sx node[111];
cx node[123],node[122];
rz(3.5*pi) node[111];
rz(0.03125*pi) node[122];
sx node[111];
cx node[123],node[122];
rz(1.0*pi) node[111];
rz(3.96875*pi) node[122];
cx node[104],node[111];
cx node[122],node[123];
cx node[111],node[104];
cx node[123],node[122];
cx node[104],node[111];
cx node[122],node[123];
cx node[121],node[122];
cx node[124],node[123];
cx node[122],node[121];
rz(0.015625*pi) node[123];
cx node[121],node[122];
cx node[124],node[123];
cx node[122],node[111];
rz(3.984375*pi) node[123];
rz(0.125*pi) node[111];
cx node[124],node[123];
cx node[122],node[111];
cx node[123],node[124];
rz(3.875*pi) node[111];
cx node[124],node[123];
cx node[122],node[111];
cx node[125],node[124];
cx node[111],node[122];
rz(0.0078125*pi) node[124];
cx node[122],node[111];
cx node[125],node[124];
cx node[111],node[104];
cx node[121],node[122];
rz(3.9921875*pi) node[124];
rz(0.25*pi) node[104];
rz(0.0625*pi) node[122];
cx node[125],node[124];
cx node[111],node[104];
cx node[121],node[122];
cx node[124],node[125];
rz(3.75*pi) node[104];
rz(0.5*pi) node[111];
rz(3.9375*pi) node[122];
cx node[125],node[124];
sx node[111];
cx node[123],node[122];
rz(3.5*pi) node[111];
rz(0.03125*pi) node[122];
sx node[111];
cx node[123],node[122];
rz(1.0*pi) node[111];
rz(3.96875*pi) node[122];
cx node[104],node[111];
cx node[122],node[123];
cx node[111],node[104];
cx node[123],node[122];
cx node[104],node[111];
cx node[122],node[123];
cx node[121],node[122];
cx node[124],node[123];
cx node[122],node[121];
rz(0.015625*pi) node[123];
cx node[121],node[122];
cx node[124],node[123];
cx node[122],node[111];
rz(3.984375*pi) node[123];
rz(0.125*pi) node[111];
cx node[124],node[123];
cx node[122],node[111];
cx node[123],node[124];
rz(3.875*pi) node[111];
cx node[124],node[123];
cx node[122],node[111];
cx node[111],node[122];
cx node[122],node[111];
cx node[111],node[104];
cx node[121],node[122];
rz(0.25*pi) node[104];
rz(0.0625*pi) node[122];
cx node[111],node[104];
cx node[121],node[122];
rz(3.75*pi) node[104];
rz(0.5*pi) node[111];
rz(3.9375*pi) node[122];
sx node[111];
cx node[123],node[122];
rz(3.5*pi) node[111];
rz(0.03125*pi) node[122];
sx node[111];
cx node[123],node[122];
rz(1.0*pi) node[111];
rz(3.96875*pi) node[122];
cx node[104],node[111];
cx node[121],node[122];
cx node[111],node[104];
cx node[122],node[121];
cx node[104],node[111];
cx node[121],node[122];
cx node[122],node[111];
rz(0.125*pi) node[111];
cx node[122],node[111];
rz(3.875*pi) node[111];
cx node[122],node[111];
cx node[111],node[122];
cx node[122],node[111];
cx node[111],node[104];
cx node[123],node[122];
rz(0.25*pi) node[104];
rz(0.0625*pi) node[122];
cx node[111],node[104];
cx node[123],node[122];
rz(3.75*pi) node[104];
rz(0.5*pi) node[111];
rz(3.9375*pi) node[122];
sx node[111];
cx node[123],node[122];
rz(3.5*pi) node[111];
cx node[122],node[123];
sx node[111];
cx node[123],node[122];
rz(1.0*pi) node[111];
cx node[122],node[111];
cx node[111],node[122];
cx node[122],node[111];
cx node[111],node[104];
rz(0.125*pi) node[104];
cx node[111],node[104];
rz(3.875*pi) node[104];
cx node[111],node[122];
rz(0.25*pi) node[122];
cx node[111],node[122];
rz(0.5*pi) node[111];
rz(3.75*pi) node[122];
sx node[111];
rz(3.5*pi) node[111];
sx node[111];
rz(1.0*pi) node[111];
barrier node[125],node[124],node[121],node[123],node[104],node[122],node[111],node[103];
measure node[125] -> c[0];
measure node[124] -> c[1];
measure node[121] -> c[2];
measure node[123] -> c[3];
measure node[104] -> c[4];
measure node[122] -> c[5];
measure node[111] -> c[6];
