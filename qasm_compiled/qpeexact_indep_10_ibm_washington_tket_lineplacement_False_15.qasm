OPENQASM 2.0;
include "qelib1.inc";

qreg node[23];
creg c[9];
x node[0];
sx node[1];
sx node[2];
sx node[3];
rz(2.5703125027284566*pi) node[4];
sx node[5];
sx node[6];
x node[14];
sx node[15];
sx node[22];
sx node[0];
rz(0.5*pi) node[1];
rz(0.5*pi) node[2];
rz(0.5*pi) node[3];
x node[4];
rz(0.5*pi) node[5];
rz(0.5*pi) node[6];
sx node[14];
rz(0.5*pi) node[15];
rz(0.5*pi) node[22];
sx node[1];
sx node[2];
sx node[3];
rz(0.5*pi) node[4];
sx node[5];
sx node[6];
sx node[15];
sx node[22];
rz(1.0*pi) node[1];
cx node[4],node[3];
cx node[0],node[1];
rz(0.42968750212014617*pi) node[3];
rz(0.5*pi) node[0];
cx node[4],node[3];
sx node[0];
rz(3.5722656228798533*pi) node[3];
cx node[4],node[5];
rz(2.75*pi) node[0];
rz(3.8593750006083107*pi) node[5];
sx node[0];
cx node[4],node[5];
rz(1.0*pi) node[0];
cx node[4],node[15];
rz(2.144531249391689*pi) node[5];
cx node[0],node[1];
cx node[6],node[5];
rz(3.71875*pi) node[15];
sx node[0];
sx node[1];
cx node[4],node[15];
cx node[5],node[6];
rz(3.25*pi) node[0];
rz(3.5*pi) node[1];
cx node[4],node[3];
cx node[6],node[5];
rz(2.2890624999999996*pi) node[15];
sx node[0];
sx node[1];
cx node[3],node[4];
cx node[22],node[15];
rz(0.5*pi) node[0];
rz(0.75*pi) node[1];
cx node[4],node[3];
cx node[15],node[22];
cx node[14],node[0];
cx node[3],node[2];
cx node[22],node[15];
cx node[0],node[14];
rz(0.4375000000000002*pi) node[2];
cx node[15],node[4];
cx node[14],node[0];
cx node[3],node[2];
cx node[4],node[15];
rz(1.5781249999999996*pi) node[2];
cx node[15],node[4];
cx node[3],node[4];
cx node[22],node[15];
rz(3.875*pi) node[4];
cx node[15],node[22];
cx node[3],node[4];
cx node[22],node[15];
rz(0.15624999999999956*pi) node[4];
cx node[5],node[4];
cx node[4],node[5];
cx node[5],node[4];
cx node[3],node[4];
rz(3.75*pi) node[4];
cx node[3],node[4];
cx node[3],node[2];
rz(0.3125*pi) node[4];
cx node[2],node[3];
cx node[3],node[2];
cx node[2],node[1];
cx node[4],node[3];
cx node[1],node[0];
cx node[3],node[4];
cx node[2],node[1];
cx node[4],node[3];
cx node[1],node[0];
cx node[5],node[4];
sx node[0];
cx node[4],node[5];
rz(2.5*pi) node[0];
cx node[5],node[4];
sx node[0];
rz(0.6249999999999993*pi) node[0];
cx node[0],node[1];
rz(0.125*pi) node[1];
cx node[0],node[1];
cx node[0],node[14];
rz(3.875*pi) node[1];
cx node[1],node[2];
rz(0.25*pi) node[14];
cx node[0],node[14];
cx node[2],node[1];
rz(0.5*pi) node[0];
cx node[1],node[2];
rz(3.75*pi) node[14];
sx node[0];
cx node[3],node[2];
rz(3.5*pi) node[0];
rz(0.0625*pi) node[2];
sx node[0];
cx node[3],node[2];
rz(1.0*pi) node[0];
rz(3.9375*pi) node[2];
cx node[14],node[0];
cx node[2],node[3];
cx node[0],node[14];
cx node[3],node[2];
cx node[14],node[0];
cx node[2],node[3];
cx node[0],node[1];
cx node[4],node[3];
cx node[1],node[0];
rz(0.03125*pi) node[3];
cx node[0],node[1];
cx node[4],node[3];
cx node[14],node[0];
cx node[2],node[1];
rz(3.96875*pi) node[3];
cx node[0],node[14];
rz(0.125*pi) node[1];
cx node[4],node[3];
cx node[14],node[0];
cx node[2],node[1];
cx node[3],node[4];
rz(3.875*pi) node[1];
cx node[4],node[3];
cx node[2],node[1];
cx node[5],node[4];
cx node[1],node[2];
rz(0.015625*pi) node[4];
cx node[2],node[1];
cx node[5],node[4];
cx node[1],node[0];
cx node[3],node[2];
rz(3.984375*pi) node[4];
rz(0.25*pi) node[0];
rz(0.0625*pi) node[2];
cx node[15],node[4];
cx node[1],node[0];
cx node[3],node[2];
rz(0.0078125*pi) node[4];
rz(3.75*pi) node[0];
rz(0.5*pi) node[1];
rz(3.9375*pi) node[2];
cx node[15],node[4];
sx node[1];
cx node[2],node[3];
rz(3.9921875*pi) node[4];
rz(3.5*pi) node[1];
cx node[3],node[2];
cx node[5],node[4];
sx node[1];
cx node[2],node[3];
cx node[4],node[5];
rz(1.0*pi) node[1];
cx node[5],node[4];
cx node[0],node[1];
cx node[4],node[3];
cx node[6],node[5];
cx node[1],node[0];
rz(0.03125*pi) node[3];
rz(0.00390625*pi) node[5];
cx node[0],node[1];
cx node[4],node[3];
cx node[6],node[5];
cx node[2],node[1];
rz(3.96875*pi) node[3];
rz(3.99609375*pi) node[5];
rz(0.125*pi) node[1];
cx node[4],node[3];
cx node[2],node[1];
cx node[3],node[4];
rz(3.875*pi) node[1];
cx node[4],node[3];
cx node[2],node[1];
cx node[15],node[4];
cx node[1],node[2];
rz(0.015625*pi) node[4];
cx node[2],node[1];
cx node[15],node[4];
cx node[1],node[0];
cx node[3],node[2];
rz(3.984375*pi) node[4];
rz(0.25*pi) node[0];
rz(0.0625*pi) node[2];
cx node[4],node[5];
cx node[1],node[0];
cx node[3],node[2];
cx node[5],node[4];
rz(3.75*pi) node[0];
rz(0.5*pi) node[1];
rz(3.9375*pi) node[2];
cx node[4],node[5];
sx node[1];
cx node[3],node[2];
cx node[15],node[4];
cx node[6],node[5];
rz(3.5*pi) node[1];
cx node[2],node[3];
cx node[4],node[15];
rz(0.0078125*pi) node[5];
sx node[1];
cx node[3],node[2];
cx node[15],node[4];
cx node[6],node[5];
rz(1.0*pi) node[1];
cx node[4],node[3];
rz(3.9921875*pi) node[5];
cx node[22],node[15];
cx node[0],node[1];
rz(0.03125*pi) node[3];
rz(0.001953125*pi) node[15];
cx node[1],node[0];
cx node[4],node[3];
cx node[22],node[15];
cx node[0],node[1];
rz(3.96875*pi) node[3];
rz(3.998046875*pi) node[15];
cx node[2],node[1];
cx node[3],node[4];
cx node[22],node[15];
rz(0.125*pi) node[1];
cx node[4],node[3];
cx node[15],node[22];
cx node[2],node[1];
cx node[3],node[4];
cx node[22],node[15];
rz(3.875*pi) node[1];
cx node[4],node[5];
cx node[2],node[1];
cx node[5],node[4];
cx node[1],node[2];
cx node[4],node[5];
cx node[2],node[1];
cx node[15],node[4];
cx node[6],node[5];
cx node[1],node[0];
cx node[3],node[2];
rz(0.00390625*pi) node[4];
rz(0.015625*pi) node[5];
rz(0.25*pi) node[0];
rz(0.0625*pi) node[2];
cx node[15],node[4];
cx node[6],node[5];
cx node[1],node[0];
cx node[3],node[2];
rz(3.99609375*pi) node[4];
rz(3.984375*pi) node[5];
rz(3.75*pi) node[0];
rz(0.5*pi) node[1];
rz(3.9375*pi) node[2];
sx node[1];
cx node[3],node[2];
rz(3.5*pi) node[1];
cx node[2],node[3];
sx node[1];
cx node[3],node[2];
rz(1.0*pi) node[1];
cx node[3],node[4];
cx node[0],node[1];
cx node[4],node[3];
cx node[1],node[0];
cx node[3],node[4];
cx node[0],node[1];
cx node[4],node[5];
cx node[2],node[1];
cx node[5],node[4];
rz(0.125*pi) node[1];
cx node[4],node[5];
cx node[2],node[1];
cx node[15],node[4];
cx node[6],node[5];
rz(3.875*pi) node[1];
rz(0.0078125*pi) node[4];
rz(0.03125*pi) node[5];
cx node[2],node[1];
cx node[15],node[4];
cx node[6],node[5];
cx node[1],node[2];
rz(3.9921875*pi) node[4];
rz(3.96875*pi) node[5];
cx node[2],node[1];
cx node[1],node[0];
cx node[2],node[3];
rz(0.25*pi) node[0];
cx node[3],node[2];
cx node[1],node[0];
cx node[2],node[3];
rz(3.75*pi) node[0];
rz(0.5*pi) node[1];
cx node[3],node[4];
sx node[1];
cx node[4],node[3];
rz(3.5*pi) node[1];
cx node[3],node[4];
sx node[1];
cx node[4],node[5];
rz(1.0*pi) node[1];
cx node[5],node[4];
cx node[0],node[1];
cx node[4],node[5];
cx node[1],node[0];
cx node[15],node[4];
cx node[6],node[5];
cx node[0],node[1];
rz(0.015625*pi) node[4];
rz(0.0625*pi) node[5];
cx node[1],node[2];
cx node[15],node[4];
cx node[6],node[5];
cx node[2],node[1];
rz(3.984375*pi) node[4];
rz(3.9375*pi) node[5];
cx node[1],node[2];
cx node[0],node[1];
cx node[2],node[3];
cx node[1],node[0];
cx node[3],node[2];
cx node[0],node[1];
cx node[2],node[3];
cx node[1],node[2];
cx node[3],node[4];
cx node[2],node[1];
cx node[4],node[3];
cx node[1],node[2];
cx node[3],node[4];
cx node[2],node[3];
cx node[4],node[5];
cx node[3],node[2];
cx node[5],node[4];
cx node[2],node[3];
cx node[4],node[5];
cx node[15],node[4];
cx node[6],node[5];
rz(0.03125*pi) node[4];
rz(0.125*pi) node[5];
cx node[15],node[4];
cx node[6],node[5];
rz(3.96875*pi) node[4];
rz(3.875*pi) node[5];
cx node[3],node[4];
cx node[4],node[3];
cx node[3],node[4];
cx node[4],node[5];
cx node[5],node[4];
cx node[4],node[5];
cx node[15],node[4];
cx node[6],node[5];
rz(0.0625*pi) node[4];
rz(0.25*pi) node[5];
cx node[15],node[4];
cx node[6],node[5];
rz(3.9375*pi) node[4];
rz(3.75*pi) node[5];
rz(0.5*pi) node[6];
cx node[15],node[4];
sx node[6];
cx node[4],node[15];
rz(3.5*pi) node[6];
cx node[15],node[4];
sx node[6];
cx node[4],node[5];
rz(1.0*pi) node[6];
rz(0.125*pi) node[5];
cx node[4],node[5];
rz(3.875*pi) node[5];
cx node[6],node[5];
cx node[5],node[6];
cx node[6],node[5];
cx node[4],node[5];
rz(0.25*pi) node[5];
cx node[4],node[5];
rz(0.5*pi) node[4];
rz(3.75*pi) node[5];
sx node[4];
rz(3.5*pi) node[4];
sx node[4];
rz(1.0*pi) node[4];
barrier node[22],node[0],node[1],node[2],node[3],node[15],node[6],node[5],node[4],node[14];
measure node[22] -> c[0];
measure node[0] -> c[1];
measure node[1] -> c[2];
measure node[2] -> c[3];
measure node[3] -> c[4];
measure node[15] -> c[5];
measure node[6] -> c[6];
measure node[5] -> c[7];
measure node[4] -> c[8];
