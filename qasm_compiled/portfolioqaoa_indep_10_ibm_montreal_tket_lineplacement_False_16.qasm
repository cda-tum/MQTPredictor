OPENQASM 2.0;
include "qelib1.inc";

qreg node[15];
creg meas[10];
sx node[0];
sx node[1];
sx node[2];
sx node[3];
sx node[4];
sx node[5];
sx node[8];
sx node[9];
sx node[11];
sx node[14];
rz(0.5*pi) node[0];
rz(0.5*pi) node[1];
rz(0.5*pi) node[2];
rz(0.5*pi) node[3];
rz(0.5*pi) node[4];
rz(0.5*pi) node[5];
rz(0.5*pi) node[8];
rz(0.5*pi) node[9];
rz(0.5*pi) node[11];
rz(0.5*pi) node[14];
sx node[0];
sx node[1];
sx node[2];
sx node[3];
sx node[4];
sx node[5];
sx node[8];
sx node[9];
sx node[11];
sx node[14];
rz(3.49219629152841*pi) node[1];
cx node[1],node[2];
rz(0.0637167493905153*pi) node[2];
cx node[1],node[2];
cx node[1],node[0];
rz(3.5030100423058004*pi) node[2];
rz(0.06357987613945326*pi) node[0];
cx node[1],node[0];
cx node[1],node[4];
rz(0.06365149586384433*pi) node[4];
cx node[1],node[4];
cx node[2],node[1];
cx node[1],node[2];
cx node[2],node[1];
cx node[1],node[0];
cx node[2],node[3];
rz(0.06349775218881959*pi) node[0];
rz(0.06370529023461202*pi) node[3];
cx node[1],node[0];
cx node[2],node[3];
rz(3.4988376044867144*pi) node[0];
cx node[1],node[4];
cx node[3],node[2];
cx node[2],node[3];
rz(0.0637148395311975*pi) node[4];
cx node[1],node[4];
cx node[3],node[2];
cx node[1],node[2];
cx node[3],node[5];
rz(0.06371770432017243*pi) node[2];
rz(0.06370433530495134*pi) node[5];
cx node[1],node[2];
cx node[3],node[5];
cx node[1],node[2];
cx node[5],node[3];
cx node[2],node[1];
cx node[3],node[5];
cx node[1],node[2];
cx node[5],node[3];
cx node[0],node[1];
cx node[2],node[3];
cx node[5],node[8];
cx node[1],node[0];
rz(0.06334273527425083*pi) node[3];
rz(0.06356746205389285*pi) node[8];
cx node[0],node[1];
cx node[2],node[3];
cx node[5],node[8];
cx node[1],node[4];
cx node[2],node[3];
cx node[8],node[5];
cx node[3],node[2];
rz(0.06380110151035367*pi) node[4];
cx node[5],node[8];
cx node[1],node[4];
cx node[2],node[3];
cx node[8],node[5];
cx node[1],node[0];
cx node[3],node[5];
rz(3.49433683002003*pi) node[4];
cx node[8],node[11];
rz(0.0636632733296345*pi) node[0];
rz(0.06356873529344043*pi) node[5];
rz(0.06354963670026947*pi) node[11];
cx node[1],node[0];
cx node[3],node[5];
cx node[8],node[11];
cx node[1],node[2];
cx node[3],node[5];
cx node[8],node[9];
rz(0.06414678604674862*pi) node[2];
cx node[5],node[3];
rz(0.06361807332579872*pi) node[9];
cx node[1],node[2];
cx node[3],node[5];
cx node[8],node[9];
cx node[1],node[2];
cx node[11],node[8];
cx node[2],node[1];
cx node[8],node[11];
cx node[1],node[2];
cx node[11],node[8];
cx node[4],node[1];
cx node[2],node[3];
cx node[5],node[8];
cx node[11],node[14];
cx node[1],node[4];
rz(0.06354199726299825*pi) node[3];
rz(0.06368810150075888*pi) node[8];
rz(0.06368300854257924*pi) node[14];
cx node[4],node[1];
cx node[2],node[3];
cx node[5],node[8];
cx node[11],node[14];
cx node[1],node[0];
cx node[2],node[3];
cx node[5],node[8];
sx node[11];
rz(0.06357637473070454*pi) node[0];
cx node[3],node[2];
cx node[8],node[5];
rz(3.0608518006882766*pi) node[11];
cx node[1],node[0];
cx node[2],node[3];
cx node[5],node[8];
sx node[11];
rz(3.49729870351097*pi) node[0];
cx node[1],node[4];
cx node[3],node[5];
cx node[8],node[9];
rz(0.9940121221051352*pi) node[11];
rz(0.06325933808406603*pi) node[4];
rz(0.06369510431825276*pi) node[5];
rz(0.06354549867174697*pi) node[9];
cx node[14],node[11];
cx node[1],node[4];
cx node[3],node[5];
cx node[8],node[9];
cx node[11],node[14];
cx node[1],node[2];
cx node[3],node[5];
cx node[14],node[11];
rz(0.0635225803599404*pi) node[2];
cx node[5],node[3];
cx node[8],node[11];
cx node[1],node[2];
cx node[3],node[5];
rz(0.0636931944589385*pi) node[11];
cx node[1],node[2];
cx node[8],node[11];
cx node[2],node[1];
sx node[8];
cx node[1],node[2];
rz(3.0608518006882766*pi) node[8];
cx node[0],node[1];
cx node[2],node[3];
sx node[8];
cx node[1],node[0];
rz(0.06378232122706606*pi) node[3];
rz(1.5*pi) node[8];
cx node[0],node[1];
cx node[2],node[3];
cx node[8],node[11];
cx node[1],node[4];
cx node[2],node[3];
cx node[11],node[8];
cx node[3],node[2];
rz(0.06359801980296709*pi) node[4];
cx node[8],node[11];
cx node[1],node[4];
cx node[2],node[3];
cx node[5],node[8];
cx node[14],node[11];
cx node[1],node[0];
rz(3.526701051359744*pi) node[4];
cx node[8],node[5];
rz(0.7026383432983785*pi) node[11];
rz(0.0636250761432926*pi) node[0];
cx node[5],node[8];
cx node[14],node[11];
cx node[1],node[0];
cx node[8],node[9];
rz(3.502309633232241*pi) node[11];
cx node[1],node[2];
rz(0.06355982261662518*pi) node[9];
rz(0.06365754375168464*pi) node[2];
cx node[8],node[9];
cx node[1],node[2];
cx node[8],node[5];
cx node[1],node[2];
rz(0.06353085641698542*pi) node[5];
cx node[2],node[1];
cx node[8],node[5];
cx node[1],node[2];
cx node[3],node[5];
sx node[8];
cx node[4],node[1];
cx node[5],node[3];
rz(3.0608518006882766*pi) node[8];
cx node[1],node[4];
cx node[3],node[5];
sx node[8];
cx node[4],node[1];
rz(1.5*pi) node[8];
cx node[1],node[0];
cx node[8],node[11];
rz(0.06361711839613804*pi) node[0];
cx node[11],node[8];
cx node[1],node[0];
cx node[8],node[11];
rz(3.493367544585612*pi) node[0];
cx node[1],node[4];
cx node[14],node[11];
rz(0.06276022818252969*pi) node[4];
rz(0.7025333010359383*pi) node[11];
cx node[1],node[4];
cx node[14],node[11];
cx node[8],node[11];
rz(0.702470275678472*pi) node[11];
cx node[8],node[11];
cx node[9],node[8];
rz(3.499108072397005*pi) node[11];
cx node[8],node[9];
cx node[14],node[11];
cx node[9],node[8];
cx node[11],node[14];
cx node[5],node[8];
cx node[14],node[11];
rz(0.06367091276690218*pi) node[8];
cx node[5],node[8];
cx node[5],node[3];
rz(0.06355536627821934*pi) node[3];
cx node[5],node[3];
cx node[2],node[3];
sx node[5];
cx node[3],node[2];
rz(3.0608518006882766*pi) node[5];
cx node[2],node[3];
sx node[5];
rz(1.5*pi) node[5];
cx node[8],node[5];
cx node[5],node[8];
cx node[8],node[5];
cx node[3],node[5];
cx node[11],node[8];
rz(0.06365149586384433*pi) node[5];
rz(0.7025880503363613*pi) node[8];
cx node[3],node[5];
cx node[11],node[8];
cx node[3],node[2];
cx node[9],node[8];
rz(0.06363207896079004*pi) node[2];
rz(0.7026367517489476*pi) node[8];
cx node[3],node[2];
cx node[9],node[8];
sx node[3];
cx node[11],node[8];
rz(3.0608518006882766*pi) node[3];
cx node[8],node[11];
sx node[3];
cx node[11],node[8];
rz(1.5*pi) node[3];
cx node[14],node[11];
cx node[3],node[5];
rz(0.7027029602052739*pi) node[11];
cx node[5],node[3];
cx node[14],node[11];
cx node[3],node[5];
rz(3.4956545692868537*pi) node[11];
cx node[3],node[2];
cx node[8],node[5];
cx node[14],node[11];
cx node[2],node[3];
rz(0.702629430621565*pi) node[5];
cx node[11],node[14];
cx node[3],node[2];
cx node[8],node[5];
cx node[14],node[11];
cx node[1],node[2];
cx node[5],node[8];
rz(0.06376067615480707*pi) node[2];
cx node[8],node[5];
cx node[1],node[2];
cx node[5],node[8];
cx node[1],node[2];
cx node[9],node[8];
cx node[2],node[1];
rz(0.7026389799181523*pi) node[8];
cx node[1],node[2];
cx node[9],node[8];
cx node[0],node[1];
cx node[2],node[3];
cx node[11],node[8];
cx node[1],node[0];
rz(0.06369255783916472*pi) node[3];
rz(0.7025972813230599*pi) node[8];
cx node[0],node[1];
cx node[2],node[3];
cx node[11],node[8];
cx node[1],node[4];
sx node[2];
cx node[8],node[11];
rz(3.0608518006882766*pi) node[2];
rz(0.06368141699314833*pi) node[4];
cx node[11],node[8];
cx node[1],node[4];
sx node[2];
cx node[8],node[11];
cx node[1],node[0];
rz(1.5*pi) node[2];
rz(3.4837766130669854*pi) node[4];
cx node[14],node[11];
rz(0.06363271558056027*pi) node[0];
cx node[2],node[3];
rz(0.7025304362469615*pi) node[11];
cx node[1],node[0];
cx node[3],node[2];
cx node[14],node[11];
cx node[2],node[3];
rz(3.497927238212229*pi) node[11];
cx node[1],node[2];
cx node[5],node[3];
rz(0.06364894938475629*pi) node[2];
rz(0.702628794001793*pi) node[3];
cx node[1],node[2];
cx node[5],node[3];
sx node[1];
cx node[3],node[5];
rz(3.0608518006882766*pi) node[1];
cx node[5],node[3];
sx node[1];
cx node[3],node[5];
rz(1.5*pi) node[1];
cx node[5],node[8];
cx node[1],node[2];
cx node[8],node[5];
cx node[2],node[1];
cx node[5],node[8];
cx node[1],node[2];
cx node[9],node[8];
cx node[4],node[1];
cx node[3],node[2];
rz(0.7023512277810404*pi) node[8];
cx node[1],node[4];
rz(0.7025237517393528*pi) node[2];
cx node[9],node[8];
cx node[4],node[1];
cx node[3],node[2];
cx node[5],node[8];
cx node[1],node[0];
cx node[2],node[3];
rz(0.7029684306503494*pi) node[8];
rz(0.063674095865764*pi) node[0];
cx node[3],node[2];
cx node[5],node[8];
cx node[1],node[0];
cx node[2],node[3];
cx node[8],node[11];
rz(3.496605074437987*pi) node[0];
cx node[1],node[4];
cx node[3],node[5];
cx node[11],node[8];
cx node[5],node[3];
rz(0.06374125925174923*pi) node[4];
cx node[8],node[11];
cx node[1],node[4];
cx node[3],node[5];
cx node[14],node[11];
sx node[1];
rz(0.702287247493917*pi) node[11];
rz(3.0608518006882766*pi) node[1];
cx node[14],node[11];
sx node[1];
cx node[8],node[11];
rz(1.5*pi) node[1];
rz(0.7025473066709296*pi) node[11];
cx node[2],node[1];
cx node[8],node[11];
rz(0.7025100644142466*pi) node[1];
cx node[9],node[8];
rz(3.5204880561842886*pi) node[11];
cx node[2],node[1];
cx node[8],node[9];
cx node[14],node[11];
cx node[1],node[2];
cx node[9],node[8];
cx node[11],node[14];
cx node[2],node[1];
cx node[8],node[5];
cx node[14],node[11];
cx node[1],node[2];
rz(0.7025247066690099*pi) node[5];
cx node[0],node[1];
cx node[8],node[5];
cx node[1],node[0];
cx node[3],node[5];
cx node[0],node[1];
rz(0.7025040165264098*pi) node[5];
cx node[1],node[4];
cx node[3],node[5];
cx node[2],node[3];
rz(0.06365595220225373*pi) node[4];
cx node[8],node[5];
cx node[1],node[4];
cx node[3],node[2];
cx node[5],node[8];
sx node[1];
cx node[2],node[3];
rz(3.498056408364042*pi) node[4];
cx node[8],node[5];
rz(3.0608518006882766*pi) node[1];
cx node[5],node[3];
sx node[4];
cx node[11],node[8];
sx node[1];
rz(0.7026163799162308*pi) node[3];
rz(3.0608518006882766*pi) node[4];
rz(0.7024890559617578*pi) node[8];
rz(1.5*pi) node[1];
cx node[5],node[3];
sx node[4];
cx node[11],node[8];
cx node[0],node[1];
cx node[2],node[3];
rz(1.5*pi) node[4];
cx node[9],node[8];
rz(0.7025622672355798*pi) node[1];
rz(0.7026214728744105*pi) node[3];
rz(0.7025679968135314*pi) node[8];
cx node[0],node[1];
cx node[2],node[3];
cx node[9],node[8];
cx node[3],node[5];
cx node[11],node[8];
cx node[5],node[3];
cx node[8],node[11];
cx node[3],node[5];
cx node[11],node[8];
cx node[3],node[2];
cx node[8],node[5];
cx node[14],node[11];
cx node[2],node[3];
rz(0.7026886362603957*pi) node[5];
rz(0.7025616306158078*pi) node[11];
cx node[3],node[2];
cx node[8],node[5];
cx node[14],node[11];
cx node[2],node[1];
cx node[5],node[8];
rz(3.4949108382377854*pi) node[11];
rz(0.7025065630054996*pi) node[1];
cx node[8],node[5];
cx node[14],node[11];
cx node[2],node[1];
cx node[5],node[8];
cx node[11],node[14];
cx node[1],node[2];
cx node[9],node[8];
cx node[14],node[11];
cx node[2],node[1];
rz(0.702592824984654*pi) node[8];
cx node[1],node[2];
cx node[9],node[8];
cx node[4],node[1];
cx node[3],node[2];
cx node[11],node[8];
cx node[1],node[4];
rz(0.7025177038515142*pi) node[2];
rz(0.7019043207008391*pi) node[8];
cx node[4],node[1];
cx node[3],node[2];
cx node[11],node[8];
cx node[0],node[1];
cx node[2],node[3];
cx node[8],node[11];
rz(0.7026122418877119*pi) node[1];
cx node[3],node[2];
cx node[11],node[8];
cx node[0],node[1];
cx node[2],node[3];
cx node[8],node[11];
sx node[0];
cx node[4],node[1];
cx node[5],node[3];
cx node[14],node[11];
rz(3.917263190282551*pi) node[0];
rz(0.7026198813249795*pi) node[1];
rz(0.7026030109010115*pi) node[3];
rz(0.7026109686481661*pi) node[11];
sx node[0];
cx node[4],node[1];
cx node[5],node[3];
cx node[14],node[11];
rz(1.0043229114313663*pi) node[0];
cx node[2],node[1];
cx node[3],node[5];
sx node[4];
rz(3.4875515773311934*pi) node[11];
rz(0.7024954221594815*pi) node[1];
cx node[5],node[3];
rz(3.917263190282551*pi) node[4];
cx node[2],node[1];
cx node[3],node[5];
sx node[4];
sx node[2];
rz(1.5*pi) node[4];
cx node[5],node[8];
rz(3.917263190282551*pi) node[2];
cx node[8],node[5];
sx node[2];
cx node[5],node[8];
rz(1.5*pi) node[2];
cx node[9],node[8];
cx node[1],node[2];
rz(0.7025880503363613*pi) node[8];
cx node[2],node[1];
cx node[9],node[8];
cx node[1],node[2];
cx node[5],node[8];
cx node[0],node[1];
cx node[3],node[2];
rz(0.7026717658364277*pi) node[8];
cx node[1],node[0];
rz(0.7025145207526542*pi) node[2];
cx node[5],node[8];
cx node[0],node[1];
cx node[3],node[2];
cx node[8],node[11];
cx node[1],node[4];
sx node[3];
cx node[11],node[8];
rz(3.917263190282551*pi) node[3];
rz(3.0438149772074983*pi) node[4];
cx node[8],node[11];
cx node[1],node[4];
sx node[3];
cx node[14],node[11];
cx node[1],node[0];
rz(1.5*pi) node[3];
rz(3.4983325740212954*pi) node[4];
rz(0.7025737263914831*pi) node[11];
rz(3.043891053270295*pi) node[0];
cx node[2],node[3];
cx node[14],node[11];
cx node[1],node[0];
cx node[3],node[2];
cx node[8],node[11];
cx node[2],node[3];
rz(0.7026055573801013*pi) node[11];
cx node[1],node[2];
cx node[3],node[5];
cx node[8],node[11];
rz(3.0438512645345224*pi) node[2];
cx node[5],node[3];
cx node[9],node[8];
rz(3.49739502408253*pi) node[11];
cx node[1],node[2];
cx node[3],node[5];
cx node[8],node[9];
cx node[14],node[11];
cx node[1],node[2];
cx node[9],node[8];
cx node[11],node[14];
cx node[2],node[1];
cx node[8],node[5];
cx node[14],node[11];
cx node[1],node[2];
rz(0.7025730897717111*pi) node[5];
cx node[4],node[1];
cx node[8],node[5];
cx node[1],node[4];
cx node[3],node[5];
sx node[8];
cx node[4],node[1];
rz(0.7026195630150944*pi) node[5];
rz(3.917263190282551*pi) node[8];
cx node[1],node[0];
cx node[3],node[5];
sx node[8];
rz(3.043936571584018*pi) node[0];
sx node[3];
rz(1.5*pi) node[8];
cx node[1],node[0];
rz(3.917263190282551*pi) node[3];
cx node[8],node[5];
rz(3.5006439175978414*pi) node[0];
cx node[1],node[4];
sx node[3];
cx node[5],node[8];
rz(1.5*pi) node[3];
rz(3.0438162504470423*pi) node[4];
cx node[8],node[5];
cx node[1],node[4];
cx node[2],node[3];
cx node[11],node[8];
cx node[3],node[2];
rz(0.7025861404770453*pi) node[8];
cx node[2],node[3];
cx node[11],node[8];
cx node[3],node[5];
cx node[9],node[8];
sx node[11];
rz(3.043821661715107*pi) node[5];
rz(0.7026571235816643*pi) node[8];
rz(3.917263190282551*pi) node[11];
cx node[3],node[5];
cx node[9],node[8];
sx node[11];
cx node[3],node[2];
sx node[9];
rz(1.5*pi) node[11];
rz(3.043821980024992*pi) node[2];
cx node[11],node[8];
rz(3.917263190282551*pi) node[9];
cx node[3],node[2];
cx node[8],node[11];
sx node[9];
cx node[3],node[5];
cx node[11],node[8];
rz(1.5*pi) node[9];
cx node[5],node[3];
cx node[14],node[11];
cx node[3],node[5];
rz(0.70259155174511*pi) node[11];
cx node[3],node[2];
cx node[5],node[8];
cx node[14],node[11];
cx node[2],node[3];
rz(3.043897737777904*pi) node[8];
rz(3.498508663050332*pi) node[11];
sx node[14];
cx node[3],node[2];
cx node[5],node[8];
sx node[11];
rz(3.917263190282551*pi) node[14];
cx node[1],node[2];
cx node[5],node[8];
rz(3.917263190282551*pi) node[11];
sx node[14];
rz(3.0438146588976096*pi) node[2];
cx node[8],node[5];
sx node[11];
rz(1.5*pi) node[14];
cx node[1],node[2];
cx node[5],node[8];
rz(1.5*pi) node[11];
cx node[1],node[2];
cx node[8],node[9];
cx node[14],node[11];
cx node[2],node[1];
rz(3.0439076053843763*pi) node[9];
cx node[11],node[14];
cx node[1],node[2];
cx node[8],node[9];
cx node[14],node[11];
cx node[0],node[1];
cx node[2],node[3];
cx node[8],node[11];
cx node[1],node[0];
rz(3.044022515253287*pi) node[3];
rz(3.0438697265079213*pi) node[11];
cx node[0],node[1];
cx node[2],node[3];
cx node[8],node[11];
cx node[1],node[4];
cx node[2],node[3];
cx node[8],node[11];
cx node[3],node[2];
rz(3.043768503964115*pi) node[4];
cx node[11],node[8];
cx node[1],node[4];
cx node[2],node[3];
cx node[8],node[11];
cx node[1],node[0];
cx node[3],node[5];
rz(3.5031371434433534*pi) node[4];
cx node[11],node[14];
rz(3.043844580026912*pi) node[0];
rz(3.043897101158132*pi) node[5];
rz(3.0438337574907823*pi) node[14];
cx node[1],node[0];
cx node[3],node[5];
cx node[11],node[14];
cx node[1],node[2];
cx node[3],node[5];
sx node[11];
rz(3.0435768814126316*pi) node[2];
cx node[5],node[3];
rz(3.8131678042603316*pi) node[11];
cx node[1],node[2];
cx node[3],node[5];
sx node[11];
cx node[1],node[2];
cx node[5],node[8];
rz(1.5*pi) node[11];
cx node[2],node[1];
cx node[8],node[5];
cx node[14],node[11];
cx node[1],node[2];
cx node[5],node[8];
cx node[11],node[14];
cx node[4],node[1];
cx node[2],node[3];
cx node[8],node[9];
cx node[14],node[11];
cx node[1],node[4];
rz(3.043912061722782*pi) node[3];
rz(3.0438308927018056*pi) node[9];
cx node[4],node[1];
cx node[2],node[3];
cx node[8],node[9];
cx node[1],node[0];
cx node[2],node[3];
cx node[8],node[5];
rz(3.043892963129613*pi) node[0];
cx node[3],node[2];
rz(3.043910151863466*pi) node[5];
cx node[1],node[0];
cx node[2],node[3];
cx node[8],node[5];
rz(3.501496415135019*pi) node[0];
cx node[1],node[4];
cx node[3],node[5];
cx node[8],node[11];
cx node[5],node[3];
rz(3.0440686701867854*pi) node[4];
rz(3.0438283462227176*pi) node[11];
cx node[1],node[4];
cx node[3],node[5];
cx node[8],node[11];
cx node[1],node[2];
sx node[8];
rz(3.0439228842589134*pi) node[2];
rz(3.8131678042603316*pi) node[8];
cx node[1],node[2];
sx node[8];
cx node[1],node[2];
rz(1.5*pi) node[8];
cx node[2],node[1];
cx node[9],node[8];
cx node[1],node[2];
cx node[8],node[9];
cx node[0],node[1];
cx node[9],node[8];
cx node[1],node[0];
cx node[5],node[8];
cx node[0],node[1];
rz(3.043827072983172*pi) node[8];
cx node[1],node[4];
cx node[5],node[8];
cx node[5],node[3];
rz(3.043880867353936*pi) node[4];
cx node[1],node[4];
rz(3.0439021941163116*pi) node[3];
cx node[1],node[0];
cx node[5],node[3];
rz(3.4852088165688806*pi) node[4];
rz(3.0438659067892875*pi) node[0];
cx node[2],node[3];
cx node[5],node[8];
cx node[1],node[0];
cx node[3],node[2];
cx node[8],node[5];
cx node[2],node[3];
cx node[5],node[8];
cx node[3],node[5];
cx node[8],node[11];
rz(3.0437786898804724*pi) node[5];
rz(3.0439181096106207*pi) node[11];
cx node[3],node[5];
cx node[8],node[11];
cx node[3],node[2];
sx node[8];
rz(3.043840441998391*pi) node[2];
rz(3.8131678042603316*pi) node[8];
cx node[3],node[2];
sx node[8];
cx node[3],node[5];
rz(1.5*pi) node[8];
cx node[5],node[3];
cx node[11],node[8];
cx node[3],node[5];
cx node[8],node[11];
cx node[3],node[2];
cx node[11],node[8];
cx node[2],node[3];
cx node[5],node[8];
cx node[3],node[2];
rz(3.0439044222855163*pi) node[8];
cx node[1],node[2];
cx node[5],node[8];
rz(3.0438480814356605*pi) node[2];
sx node[5];
cx node[1],node[2];
rz(3.8131678042603316*pi) node[5];
cx node[1],node[2];
sx node[5];
cx node[2],node[1];
rz(1.5*pi) node[5];
cx node[1],node[2];
cx node[8],node[5];
cx node[4],node[1];
cx node[2],node[3];
cx node[5],node[8];
cx node[1],node[4];
rz(3.0438512645345224*pi) node[3];
cx node[8],node[5];
cx node[4],node[1];
cx node[2],node[3];
cx node[1],node[0];
cx node[2],node[3];
rz(3.0438703631276915*pi) node[0];
cx node[3],node[2];
cx node[1],node[0];
cx node[2],node[3];
rz(3.503674068559368*pi) node[0];
cx node[1],node[4];
cx node[3],node[5];
rz(3.044344963167992*pi) node[4];
rz(3.043862087070652*pi) node[5];
cx node[1],node[4];
cx node[3],node[5];
cx node[1],node[2];
sx node[3];
rz(3.0437907856561477*pi) node[2];
rz(3.8131678042603316*pi) node[3];
cx node[1],node[2];
sx node[3];
cx node[1],node[2];
rz(1.5*pi) node[3];
cx node[2],node[1];
cx node[5],node[3];
cx node[1],node[2];
cx node[3],node[5];
cx node[0],node[1];
cx node[5],node[3];
cx node[1],node[0];
cx node[2],node[3];
cx node[0],node[1];
rz(3.0438286645326027*pi) node[3];
cx node[1],node[4];
cx node[2],node[3];
sx node[2];
rz(3.0438347124204412*pi) node[4];
cx node[1],node[4];
rz(3.8131678042603316*pi) node[2];
cx node[1],node[0];
sx node[2];
rz(3.508987042531639*pi) node[4];
rz(3.0438617687607668*pi) node[0];
rz(1.5*pi) node[2];
cx node[1],node[0];
cx node[3],node[2];
cx node[2],node[3];
cx node[3],node[2];
cx node[1],node[2];
rz(3.043852537774068*pi) node[2];
cx node[1],node[2];
sx node[1];
rz(3.8131678042603316*pi) node[1];
sx node[1];
rz(1.5*pi) node[1];
cx node[4],node[1];
cx node[1],node[4];
cx node[4],node[1];
cx node[1],node[0];
rz(3.04383885044896*pi) node[0];
cx node[1],node[0];
rz(3.5018806469986314*pi) node[0];
cx node[1],node[2];
rz(3.043801608192277*pi) node[2];
cx node[1],node[2];
sx node[1];
rz(3.8131678042603316*pi) node[1];
sx node[1];
rz(1.5*pi) node[1];
cx node[2],node[1];
cx node[1],node[2];
cx node[2],node[1];
cx node[0],node[1];
rz(3.0438490363653194*pi) node[1];
cx node[0],node[1];
sx node[0];
rz(3.5010766598881085*pi) node[1];
rz(3.8131678042603316*pi) node[0];
sx node[1];
sx node[0];
rz(3.8131678042603316*pi) node[1];
rz(1.5*pi) node[0];
sx node[1];
rz(1.5*pi) node[1];
barrier node[1],node[0],node[2],node[4],node[3],node[5],node[8],node[11],node[9],node[14];
measure node[1] -> meas[0];
measure node[0] -> meas[1];
measure node[2] -> meas[2];
measure node[4] -> meas[3];
measure node[3] -> meas[4];
measure node[5] -> meas[5];
measure node[8] -> meas[6];
measure node[11] -> meas[7];
measure node[9] -> meas[8];
measure node[14] -> meas[9];
