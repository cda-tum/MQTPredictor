OPENQASM 2.0;
include "qelib1.inc";
gate rzx(param0) q0,q1 { h q1; cx q0,q1; rz(param0) q1; cx q0,q1; h q1; }
gate ecr q0,q1 { rzx(pi/4) q0,q1; x q0; rzx(-pi/4) q0,q1; }

qreg node[8];
creg meas[7];
sx node[0];
sx node[1];
sx node[2];
sx node[3];
sx node[4];
sx node[5];
sx node[6];
sx node[7];
rz(0.5*pi) node[0];
rz(0.5*pi) node[1];
rz(0.5*pi) node[2];
rz(0.5*pi) node[4];
rz(0.5*pi) node[5];
rz(0.5*pi) node[6];
rz(0.5*pi) node[7];
sx node[0];
sx node[1];
sx node[2];
sx node[4];
sx node[5];
sx node[6];
sx node[7];
sx node[0];
x node[1];
sx node[2];
sx node[4];
sx node[5];
sx node[6];
sx node[7];
rz(3.5*pi) node[1];
ecr node[1],node[2];
x node[1];
rz(0.9261983056573406*pi) node[2];
rz(3.5*pi) node[1];
sx node[2];
ecr node[1],node[2];
x node[1];
x node[2];
rz(3.5*pi) node[1];
rz(3.5*pi) node[2];
ecr node[1],node[0];
rz(2.926186050726722*pi) node[0];
x node[1];
sx node[0];
rz(3.5*pi) node[1];
ecr node[1],node[0];
x node[0];
sx node[1];
rz(3.5*pi) node[0];
ecr node[0],node[1];
sx node[0];
x node[1];
rz(3.5*pi) node[1];
ecr node[1],node[0];
x node[0];
sx node[1];
rz(3.5*pi) node[0];
ecr node[0],node[1];
x node[0];
sx node[1];
rz(3.5*pi) node[0];
ecr node[2],node[1];
ecr node[0],node[7];
rz(0.9261570208651015*pi) node[1];
x node[2];
x node[0];
sx node[1];
rz(3.5*pi) node[2];
rz(2.9262373941113635*pi) node[7];
rz(3.5*pi) node[0];
ecr node[2],node[1];
sx node[7];
ecr node[0],node[7];
sx node[1];
x node[2];
x node[0];
rz(3.5*pi) node[2];
sx node[7];
rz(3.5*pi) node[0];
ecr node[2],node[1];
ecr node[0],node[7];
x node[1];
sx node[2];
sx node[0];
rz(3.5*pi) node[1];
x node[7];
ecr node[1],node[2];
rz(3.5*pi) node[7];
ecr node[7],node[0];
sx node[1];
x node[2];
x node[0];
rz(3.5*pi) node[2];
sx node[7];
rz(3.5*pi) node[0];
ecr node[2],node[1];
ecr node[0],node[7];
x node[1];
x node[2];
sx node[0];
rz(3.5*pi) node[1];
rz(3.5*pi) node[2];
x node[7];
ecr node[1],node[0];
rz(3.5*pi) node[7];
rz(2.9261876741071418*pi) node[0];
x node[1];
ecr node[7],node[6];
sx node[0];
rz(3.5*pi) node[1];
rz(2.9262037169254054*pi) node[6];
x node[7];
ecr node[1],node[0];
sx node[6];
rz(3.5*pi) node[7];
x node[0];
sx node[1];
ecr node[7],node[6];
rz(3.5*pi) node[0];
sx node[6];
x node[7];
ecr node[0],node[1];
rz(3.5*pi) node[7];
sx node[0];
x node[1];
ecr node[7],node[6];
rz(3.5*pi) node[1];
x node[6];
sx node[7];
ecr node[1],node[0];
rz(3.5*pi) node[6];
x node[0];
sx node[1];
ecr node[6],node[7];
rz(3.5*pi) node[0];
sx node[6];
x node[7];
ecr node[0],node[1];
rz(3.5*pi) node[7];
x node[0];
sx node[1];
ecr node[7],node[6];
rz(3.5*pi) node[0];
ecr node[2],node[1];
x node[6];
sx node[7];
ecr node[0],node[7];
rz(0.9260742921256835*pi) node[1];
x node[2];
rz(3.5*pi) node[6];
x node[0];
sx node[1];
rz(3.5*pi) node[2];
ecr node[6],node[5];
rz(2.926186305374631*pi) node[7];
rz(3.5*pi) node[0];
ecr node[2],node[1];
rz(2.9267682713395407*pi) node[5];
x node[6];
sx node[7];
ecr node[0],node[7];
sx node[1];
x node[2];
sx node[5];
rz(3.5*pi) node[6];
x node[0];
rz(3.5*pi) node[2];
ecr node[6],node[5];
sx node[7];
rz(3.5*pi) node[0];
ecr node[2],node[1];
sx node[5];
x node[6];
ecr node[0],node[7];
x node[1];
sx node[2];
rz(3.5*pi) node[6];
sx node[0];
rz(3.5*pi) node[1];
ecr node[6],node[5];
x node[7];
ecr node[1],node[2];
x node[5];
sx node[6];
rz(3.5*pi) node[7];
ecr node[7],node[0];
sx node[1];
x node[2];
rz(3.5*pi) node[5];
x node[0];
rz(3.5*pi) node[2];
ecr node[5],node[6];
sx node[7];
rz(3.5*pi) node[0];
ecr node[2],node[1];
sx node[5];
x node[6];
ecr node[0],node[7];
x node[1];
x node[2];
rz(3.5*pi) node[6];
sx node[0];
rz(3.5*pi) node[1];
rz(3.5*pi) node[2];
ecr node[6],node[5];
x node[7];
ecr node[1],node[0];
x node[5];
sx node[6];
rz(3.5*pi) node[7];
rz(2.926206931855256*pi) node[0];
x node[1];
rz(3.5*pi) node[5];
ecr node[7],node[6];
sx node[0];
rz(3.5*pi) node[1];
ecr node[5],node[4];
rz(2.926255569605865*pi) node[6];
x node[7];
ecr node[1],node[0];
rz(2.926199324248976*pi) node[4];
rz(3.571933395482279*pi) node[5];
sx node[6];
rz(3.5*pi) node[7];
x node[0];
sx node[1];
sx node[4];
x node[5];
ecr node[7],node[6];
rz(3.5*pi) node[0];
rz(3.5*pi) node[5];
sx node[6];
x node[7];
ecr node[0],node[1];
ecr node[5],node[4];
rz(3.5*pi) node[7];
sx node[0];
x node[1];
x node[4];
sx node[5];
ecr node[7],node[6];
rz(3.5*pi) node[1];
rz(3.5*pi) node[4];
rz(1.3290964532969007*pi) node[5];
x node[6];
sx node[7];
ecr node[1],node[0];
sx node[5];
rz(3.5*pi) node[6];
x node[0];
sx node[1];
rz(2.5*pi) node[5];
ecr node[6],node[7];
rz(3.5*pi) node[0];
sx node[5];
sx node[6];
x node[7];
ecr node[0],node[1];
ecr node[4],node[5];
rz(3.5*pi) node[7];
x node[0];
sx node[1];
sx node[4];
x node[5];
ecr node[7],node[6];
rz(3.5*pi) node[0];
ecr node[2],node[1];
rz(3.5*pi) node[5];
x node[6];
sx node[7];
ecr node[0],node[7];
rz(0.9261937856569569*pi) node[1];
x node[2];
ecr node[5],node[4];
rz(3.5*pi) node[6];
x node[0];
sx node[1];
rz(3.5*pi) node[2];
x node[4];
sx node[5];
rz(2.926668863162086*pi) node[7];
rz(3.5*pi) node[0];
ecr node[2],node[1];
rz(3.5*pi) node[4];
sx node[7];
ecr node[0],node[7];
sx node[1];
x node[2];
ecr node[4],node[5];
sx node[0];
rz(3.5*pi) node[2];
x node[4];
sx node[5];
x node[7];
ecr node[2],node[1];
rz(3.5*pi) node[4];
ecr node[6],node[5];
rz(3.5*pi) node[7];
ecr node[7],node[0];
x node[1];
sx node[2];
rz(2.926189456642504*pi) node[5];
rz(3.573302955598573*pi) node[6];
x node[0];
rz(3.5*pi) node[1];
sx node[5];
x node[6];
sx node[7];
rz(3.5*pi) node[0];
ecr node[1],node[2];
rz(3.5*pi) node[6];
ecr node[0],node[7];
sx node[1];
x node[2];
ecr node[6],node[5];
sx node[0];
rz(3.5*pi) node[2];
sx node[5];
sx node[6];
x node[7];
ecr node[2],node[1];
rz(3.3290964532969007*pi) node[6];
rz(3.5*pi) node[7];
ecr node[7],node[0];
x node[1];
x node[2];
sx node[6];
sx node[0];
rz(3.5*pi) node[1];
rz(3.5*pi) node[2];
rz(0.5*pi) node[6];
x node[7];
ecr node[1],node[0];
x node[6];
rz(3.5*pi) node[7];
rz(2.9251917143042614*pi) node[0];
x node[1];
rz(3.5*pi) node[6];
sx node[0];
rz(3.5*pi) node[1];
ecr node[6],node[5];
ecr node[1],node[0];
x node[5];
sx node[6];
x node[0];
sx node[1];
rz(3.5*pi) node[5];
rz(3.5*pi) node[0];
ecr node[5],node[6];
ecr node[0],node[1];
sx node[5];
x node[6];
sx node[0];
x node[1];
rz(3.5*pi) node[6];
rz(3.5*pi) node[1];
ecr node[6],node[5];
ecr node[1],node[0];
sx node[5];
sx node[6];
x node[0];
sx node[1];
ecr node[4],node[5];
ecr node[7],node[6];
rz(3.5*pi) node[0];
x node[4];
rz(1.551776317305393*pi) node[5];
rz(2.926184013543451*pi) node[6];
rz(3.5722982422738228*pi) node[7];
ecr node[0],node[1];
rz(3.5*pi) node[4];
sx node[5];
sx node[6];
x node[7];
x node[0];
sx node[1];
ecr node[4],node[5];
rz(3.5*pi) node[7];
rz(3.5*pi) node[0];
ecr node[2],node[1];
x node[4];
sx node[5];
ecr node[7],node[6];
rz(0.9266541254143554*pi) node[1];
x node[2];
rz(3.5*pi) node[4];
sx node[6];
sx node[7];
sx node[1];
rz(3.5*pi) node[2];
ecr node[4],node[5];
rz(3.3290964532969007*pi) node[7];
ecr node[2],node[1];
sx node[4];
x node[5];
sx node[7];
sx node[1];
x node[2];
rz(3.5*pi) node[5];
rz(0.5*pi) node[7];
rz(3.5*pi) node[2];
ecr node[5],node[4];
x node[7];
ecr node[2],node[1];
x node[4];
sx node[5];
rz(3.5*pi) node[7];
x node[1];
sx node[2];
rz(3.5*pi) node[4];
ecr node[7],node[6];
rz(3.5*pi) node[1];
ecr node[4],node[5];
x node[6];
sx node[7];
ecr node[1],node[2];
x node[4];
x node[5];
rz(3.5*pi) node[6];
sx node[1];
x node[2];
rz(3.5*pi) node[4];
rz(3.5*pi) node[5];
ecr node[6],node[7];
rz(3.5*pi) node[2];
sx node[6];
x node[7];
ecr node[2],node[1];
rz(3.5*pi) node[7];
x node[1];
x node[2];
ecr node[7],node[6];
rz(3.5*pi) node[1];
rz(3.5*pi) node[2];
sx node[6];
sx node[7];
ecr node[0],node[7];
ecr node[5],node[6];
rz(3.568271590382609*pi) node[0];
x node[5];
rz(3.5517444863167746*pi) node[6];
rz(2.926149063117948*pi) node[7];
x node[0];
rz(3.5*pi) node[5];
sx node[6];
sx node[7];
rz(3.5*pi) node[0];
ecr node[5],node[6];
ecr node[0],node[7];
sx node[5];
x node[6];
sx node[0];
rz(3.5*pi) node[6];
x node[7];
rz(3.3290964532969007*pi) node[0];
ecr node[6],node[5];
rz(3.5*pi) node[7];
sx node[0];
x node[5];
sx node[6];
rz(0.5*pi) node[0];
rz(3.5*pi) node[5];
sx node[0];
ecr node[5],node[6];
ecr node[7],node[0];
sx node[5];
x node[6];
x node[0];
rz(3.5*pi) node[6];
sx node[7];
rz(3.5*pi) node[0];
ecr node[6],node[5];
ecr node[0],node[7];
sx node[5];
x node[6];
sx node[0];
ecr node[4],node[5];
rz(3.5*pi) node[6];
x node[7];
x node[4];
rz(1.55166968349352*pi) node[5];
rz(3.5*pi) node[7];
ecr node[7],node[0];
rz(3.5*pi) node[4];
sx node[5];
sx node[0];
ecr node[4],node[5];
sx node[7];
ecr node[1],node[0];
x node[4];
sx node[5];
ecr node[6],node[7];
rz(2.926195854671217*pi) node[0];
rz(3.5736636006996196*pi) node[1];
rz(3.5*pi) node[4];
x node[6];
rz(3.5518769032294255*pi) node[7];
sx node[0];
x node[1];
ecr node[4],node[5];
rz(3.5*pi) node[6];
sx node[7];
rz(3.5*pi) node[1];
sx node[4];
x node[5];
ecr node[6],node[7];
ecr node[1],node[0];
rz(3.5*pi) node[5];
sx node[6];
x node[7];
x node[0];
sx node[1];
ecr node[5],node[4];
rz(3.5*pi) node[7];
rz(3.5*pi) node[0];
rz(3.3290964532969007*pi) node[1];
x node[4];
sx node[5];
ecr node[7],node[6];
sx node[1];
rz(3.5*pi) node[4];
x node[6];
sx node[7];
rz(0.5*pi) node[1];
ecr node[4],node[5];
rz(3.5*pi) node[6];
sx node[1];
x node[4];
x node[5];
ecr node[6],node[7];
ecr node[0],node[1];
rz(3.5*pi) node[4];
rz(3.5*pi) node[5];
sx node[6];
x node[7];
sx node[0];
x node[1];
rz(3.5*pi) node[7];
rz(3.5*pi) node[1];
ecr node[7],node[6];
ecr node[1],node[0];
sx node[6];
x node[7];
x node[0];
sx node[1];
ecr node[5],node[6];
rz(3.5*pi) node[7];
rz(3.5*pi) node[0];
x node[5];
rz(3.5517486243452936*pi) node[6];
ecr node[0],node[1];
rz(3.5*pi) node[5];
sx node[6];
sx node[0];
sx node[1];
ecr node[5],node[6];
ecr node[7],node[0];
ecr node[2],node[1];
sx node[5];
x node[6];
rz(3.5517900046304973*pi) node[0];
rz(2.9258076757650153*pi) node[1];
rz(3.5333879462937503*pi) node[2];
rz(3.5*pi) node[6];
x node[7];
sx node[0];
sx node[1];
x node[2];
ecr node[6],node[5];
rz(3.5*pi) node[7];
ecr node[7],node[0];
rz(3.5*pi) node[2];
x node[5];
sx node[6];
sx node[0];
ecr node[2],node[1];
rz(3.5*pi) node[5];
x node[7];
rz(3.5726539217406446*pi) node[1];
sx node[2];
ecr node[5],node[6];
rz(3.5*pi) node[7];
ecr node[7],node[0];
sx node[1];
rz(3.3290964532969007*pi) node[2];
sx node[5];
x node[6];
x node[0];
rz(3.3290964532969007*pi) node[1];
sx node[2];
rz(3.5*pi) node[6];
sx node[7];
rz(3.5*pi) node[0];
sx node[1];
rz(0.5*pi) node[2];
ecr node[6],node[5];
ecr node[0],node[7];
rz(0.5*pi) node[1];
x node[2];
sx node[5];
x node[6];
sx node[0];
sx node[1];
rz(3.5*pi) node[2];
ecr node[4],node[5];
rz(3.5*pi) node[6];
x node[7];
ecr node[2],node[1];
x node[4];
rz(1.5514560975598908*pi) node[5];
rz(3.5*pi) node[7];
ecr node[7],node[0];
x node[1];
sx node[2];
rz(3.5*pi) node[4];
sx node[5];
x node[0];
rz(3.5*pi) node[1];
ecr node[4],node[5];
sx node[7];
rz(3.5*pi) node[0];
ecr node[1],node[2];
x node[4];
sx node[5];
ecr node[6],node[7];
sx node[1];
x node[2];
rz(3.5*pi) node[4];
x node[6];
rz(3.551745122936545*pi) node[7];
rz(3.5*pi) node[2];
ecr node[4],node[5];
rz(3.5*pi) node[6];
sx node[7];
ecr node[2],node[1];
sx node[4];
x node[5];
ecr node[6],node[7];
sx node[1];
sx node[2];
rz(3.5*pi) node[5];
sx node[6];
x node[7];
ecr node[0],node[1];
ecr node[5],node[4];
rz(3.5*pi) node[7];
x node[0];
rz(3.5532472272894466*pi) node[1];
x node[4];
sx node[5];
ecr node[7],node[6];
rz(3.5*pi) node[0];
sx node[1];
rz(3.5*pi) node[4];
x node[6];
sx node[7];
ecr node[0],node[1];
ecr node[4],node[5];
rz(3.5*pi) node[6];
x node[0];
sx node[1];
x node[4];
x node[5];
ecr node[6],node[7];
rz(3.5*pi) node[0];
rz(3.5*pi) node[4];
rz(3.5*pi) node[5];
sx node[6];
x node[7];
ecr node[0],node[1];
rz(3.5*pi) node[7];
sx node[0];
x node[1];
ecr node[7],node[6];
rz(3.5*pi) node[1];
sx node[6];
x node[7];
ecr node[1],node[0];
ecr node[5],node[6];
rz(3.5*pi) node[7];
x node[0];
sx node[1];
x node[5];
rz(3.551798280687539*pi) node[6];
rz(3.5*pi) node[0];
rz(3.5*pi) node[5];
sx node[6];
ecr node[0],node[1];
ecr node[5],node[6];
sx node[0];
x node[1];
sx node[5];
x node[6];
ecr node[7],node[0];
rz(3.5*pi) node[1];
rz(3.5*pi) node[6];
rz(3.551924013092581*pi) node[0];
ecr node[1],node[2];
ecr node[6],node[5];
x node[7];
sx node[0];
rz(0.9434022570091578*pi) node[1];
rz(3.551778863784481*pi) node[2];
x node[5];
sx node[6];
rz(3.5*pi) node[7];
ecr node[7],node[0];
x node[1];
sx node[2];
rz(3.5*pi) node[5];
sx node[0];
rz(3.5*pi) node[1];
ecr node[5],node[6];
x node[7];
ecr node[1],node[2];
sx node[5];
x node[6];
rz(3.5*pi) node[7];
ecr node[7],node[0];
sx node[1];
x node[2];
rz(3.5*pi) node[6];
x node[0];
rz(1.04220392158369*pi) node[1];
rz(3.5*pi) node[2];
ecr node[6],node[5];
sx node[7];
rz(3.5*pi) node[0];
sx node[1];
sx node[5];
x node[6];
ecr node[0],node[7];
rz(2.5*pi) node[1];
ecr node[4],node[5];
rz(3.5*pi) node[6];
sx node[0];
sx node[1];
x node[4];
rz(1.5517645398396027*pi) node[5];
x node[7];
ecr node[2],node[1];
rz(3.5*pi) node[4];
sx node[5];
rz(3.5*pi) node[7];
ecr node[7],node[0];
x node[1];
sx node[2];
ecr node[4],node[5];
x node[0];
rz(3.5*pi) node[1];
x node[4];
sx node[5];
sx node[7];
rz(3.5*pi) node[0];
ecr node[1],node[2];
rz(3.5*pi) node[4];
ecr node[6],node[7];
sx node[1];
x node[2];
ecr node[4],node[5];
x node[6];
rz(3.552990669521183*pi) node[7];
rz(3.5*pi) node[2];
sx node[4];
x node[5];
rz(3.5*pi) node[6];
sx node[7];
ecr node[2],node[1];
rz(3.5*pi) node[5];
ecr node[6],node[7];
sx node[1];
x node[2];
ecr node[5],node[4];
sx node[6];
x node[7];
ecr node[0],node[1];
rz(3.5*pi) node[2];
x node[4];
sx node[5];
rz(3.5*pi) node[7];
rz(0.9469367381543541*pi) node[0];
rz(3.5517533989935863*pi) node[1];
rz(3.5*pi) node[4];
ecr node[7],node[6];
x node[0];
sx node[1];
ecr node[4],node[5];
x node[6];
sx node[7];
rz(3.5*pi) node[0];
x node[4];
x node[5];
rz(3.5*pi) node[6];
ecr node[0],node[1];
rz(3.5*pi) node[4];
rz(3.5*pi) node[5];
ecr node[6],node[7];
sx node[0];
sx node[1];
sx node[6];
x node[7];
rz(3.04220392158369*pi) node[0];
rz(3.5*pi) node[7];
sx node[0];
ecr node[7],node[6];
rz(0.5*pi) node[0];
sx node[6];
x node[7];
x node[0];
ecr node[5],node[6];
rz(3.5*pi) node[7];
rz(3.5*pi) node[0];
x node[5];
rz(3.549178272014359*pi) node[6];
ecr node[0],node[1];
rz(3.5*pi) node[5];
sx node[6];
sx node[0];
x node[1];
ecr node[5],node[6];
rz(3.5*pi) node[1];
sx node[5];
x node[6];
ecr node[1],node[0];
rz(3.5*pi) node[6];
x node[0];
sx node[1];
ecr node[6],node[5];
rz(3.5*pi) node[0];
x node[5];
sx node[6];
ecr node[0],node[1];
rz(3.5*pi) node[5];
sx node[0];
sx node[1];
ecr node[5],node[6];
ecr node[7],node[0];
ecr node[2],node[1];
sx node[5];
x node[6];
rz(3.551739393358595*pi) node[0];
rz(1.4036854575973807*pi) node[1];
x node[2];
rz(3.5*pi) node[6];
rz(0.9443437858215011*pi) node[7];
sx node[0];
sx node[1];
rz(3.5*pi) node[2];
ecr node[6],node[5];
x node[7];
ecr node[2],node[1];
sx node[5];
x node[6];
rz(3.5*pi) node[7];
ecr node[7],node[0];
sx node[1];
x node[2];
ecr node[4],node[5];
rz(3.5*pi) node[6];
sx node[0];
rz(3.5*pi) node[2];
x node[4];
rz(1.552952472334841*pi) node[5];
sx node[7];
ecr node[2],node[1];
rz(3.5*pi) node[4];
sx node[5];
rz(3.04220392158369*pi) node[7];
x node[1];
sx node[2];
ecr node[4],node[5];
sx node[7];
rz(3.5*pi) node[1];
x node[4];
sx node[5];
rz(0.5*pi) node[7];
ecr node[1],node[2];
rz(3.5*pi) node[4];
x node[7];
sx node[1];
x node[2];
ecr node[4],node[5];
rz(3.5*pi) node[7];
ecr node[7],node[0];
rz(3.5*pi) node[2];
sx node[4];
x node[5];
x node[0];
ecr node[2],node[1];
rz(3.5*pi) node[5];
sx node[7];
rz(3.5*pi) node[0];
x node[1];
x node[2];
ecr node[5],node[4];
ecr node[0],node[7];
rz(3.5*pi) node[1];
rz(3.5*pi) node[2];
x node[4];
sx node[5];
sx node[0];
rz(3.5*pi) node[4];
x node[7];
ecr node[4],node[5];
rz(3.5*pi) node[7];
ecr node[7],node[0];
x node[4];
x node[5];
sx node[0];
rz(3.5*pi) node[4];
rz(3.5*pi) node[5];
sx node[7];
ecr node[1],node[0];
ecr node[6],node[7];
rz(3.4037048745004386*pi) node[0];
x node[1];
rz(0.9339520821222016*pi) node[6];
rz(3.551648993350918*pi) node[7];
sx node[0];
rz(3.5*pi) node[1];
x node[6];
sx node[7];
ecr node[1],node[0];
rz(3.5*pi) node[6];
x node[0];
sx node[1];
ecr node[6],node[7];
rz(3.5*pi) node[0];
sx node[6];
x node[7];
ecr node[0],node[1];
rz(3.04220392158369*pi) node[6];
rz(3.5*pi) node[7];
sx node[0];
x node[1];
sx node[6];
rz(3.5*pi) node[1];
rz(0.5*pi) node[6];
ecr node[1],node[0];
sx node[6];
x node[0];
sx node[1];
ecr node[7],node[6];
rz(3.5*pi) node[0];
x node[6];
sx node[7];
ecr node[0],node[1];
rz(3.5*pi) node[6];
x node[0];
sx node[1];
ecr node[6],node[7];
rz(3.5*pi) node[0];
ecr node[2],node[1];
sx node[6];
x node[7];
rz(1.4037503928141621*pi) node[1];
x node[2];
rz(3.5*pi) node[7];
sx node[1];
rz(3.5*pi) node[2];
ecr node[7],node[6];
ecr node[2],node[1];
sx node[6];
sx node[7];
ecr node[0],node[7];
sx node[1];
x node[2];
ecr node[5],node[6];
x node[0];
rz(3.5*pi) node[2];
rz(0.9478674444305666*pi) node[5];
rz(3.5517699511076692*pi) node[6];
rz(3.403624342099233*pi) node[7];
rz(3.5*pi) node[0];
ecr node[2],node[1];
x node[5];
sx node[6];
sx node[7];
ecr node[0],node[7];
x node[1];
sx node[2];
rz(3.5*pi) node[5];
sx node[0];
rz(3.5*pi) node[1];
ecr node[5],node[6];
x node[7];
ecr node[1],node[2];
sx node[5];
x node[6];
rz(3.5*pi) node[7];
ecr node[7],node[0];
sx node[1];
x node[2];
rz(3.04220392158369*pi) node[5];
rz(3.5*pi) node[6];
x node[0];
rz(3.5*pi) node[2];
sx node[5];
sx node[7];
rz(3.5*pi) node[0];
ecr node[2],node[1];
rz(0.5*pi) node[5];
ecr node[0],node[7];
x node[1];
x node[2];
sx node[5];
sx node[0];
rz(3.5*pi) node[1];
rz(3.5*pi) node[2];
ecr node[6],node[5];
x node[7];
x node[5];
sx node[6];
rz(3.5*pi) node[7];
ecr node[7],node[0];
rz(3.5*pi) node[5];
sx node[0];
ecr node[5],node[6];
x node[7];
ecr node[1],node[0];
sx node[5];
x node[6];
rz(3.5*pi) node[7];
rz(3.4037023280213488*pi) node[0];
x node[1];
rz(3.5*pi) node[6];
sx node[0];
rz(3.5*pi) node[1];
ecr node[6],node[5];
ecr node[1],node[0];
sx node[5];
sx node[6];
x node[0];
sx node[1];
ecr node[4],node[5];
ecr node[7],node[6];
rz(3.5*pi) node[0];
rz(0.8439262477172145*pi) node[4];
rz(3.550768229895848*pi) node[5];
rz(3.40367718154034*pi) node[6];
x node[7];
ecr node[0],node[1];
x node[4];
sx node[5];
sx node[6];
rz(3.5*pi) node[7];
sx node[0];
x node[1];
rz(3.5*pi) node[4];
ecr node[7],node[6];
rz(3.5*pi) node[1];
ecr node[4],node[5];
sx node[6];
x node[7];
ecr node[1],node[0];
sx node[4];
rz(0.9452616960402891*pi) node[5];
rz(3.5*pi) node[7];
x node[0];
sx node[1];
rz(3.04220392158369*pi) node[4];
sx node[5];
ecr node[7],node[6];
rz(3.5*pi) node[0];
sx node[4];
rz(3.04220392158369*pi) node[5];
x node[6];
sx node[7];
ecr node[0],node[1];
rz(0.5*pi) node[4];
sx node[5];
rz(3.5*pi) node[6];
x node[0];
sx node[1];
x node[4];
rz(0.5*pi) node[5];
ecr node[6],node[7];
rz(3.5*pi) node[0];
ecr node[2],node[1];
rz(3.5*pi) node[4];
sx node[5];
sx node[6];
x node[7];
rz(1.403880263247725*pi) node[1];
x node[2];
ecr node[4],node[5];
rz(3.5*pi) node[7];
sx node[1];
rz(3.5*pi) node[2];
sx node[4];
x node[5];
ecr node[7],node[6];
ecr node[2],node[1];
rz(3.5*pi) node[5];
x node[6];
sx node[7];
ecr node[0],node[7];
sx node[1];
x node[2];
ecr node[5],node[4];
rz(3.5*pi) node[6];
x node[0];
rz(3.5*pi) node[2];
x node[4];
sx node[5];
rz(3.4037045561905517*pi) node[7];
rz(3.5*pi) node[0];
ecr node[2],node[1];
rz(3.5*pi) node[4];
sx node[7];
ecr node[0],node[7];
x node[1];
sx node[2];
ecr node[4],node[5];
sx node[0];
rz(3.5*pi) node[1];
sx node[4];
sx node[5];
x node[7];
ecr node[1],node[2];
ecr node[6],node[5];
rz(3.5*pi) node[7];
ecr node[7],node[0];
sx node[1];
x node[2];
rz(3.4027903701974322*pi) node[5];
x node[6];
x node[0];
rz(3.5*pi) node[2];
sx node[5];
rz(3.5*pi) node[6];
sx node[7];
rz(3.5*pi) node[0];
ecr node[2],node[1];
ecr node[6],node[5];
ecr node[0],node[7];
x node[1];
x node[2];
sx node[5];
x node[6];
sx node[0];
rz(3.5*pi) node[1];
rz(3.5*pi) node[2];
rz(3.5*pi) node[6];
x node[7];
ecr node[6],node[5];
rz(3.5*pi) node[7];
ecr node[7],node[0];
x node[5];
sx node[6];
sx node[0];
rz(3.5*pi) node[5];
x node[7];
ecr node[1],node[0];
ecr node[5],node[6];
rz(3.5*pi) node[7];
rz(3.4036720885821605*pi) node[0];
x node[1];
sx node[5];
x node[6];
sx node[0];
rz(3.5*pi) node[1];
rz(3.5*pi) node[6];
ecr node[1],node[0];
ecr node[6],node[5];
x node[0];
sx node[1];
x node[5];
sx node[6];
rz(3.5*pi) node[0];
rz(3.5*pi) node[5];
ecr node[7],node[6];
ecr node[0],node[1];
ecr node[5],node[4];
rz(3.4035956942094767*pi) node[6];
x node[7];
sx node[0];
x node[1];
rz(3.40368386604795*pi) node[4];
rz(3.0992490395702665*pi) node[5];
sx node[6];
rz(3.5*pi) node[7];
rz(3.5*pi) node[1];
sx node[4];
x node[5];
ecr node[7],node[6];
ecr node[1],node[0];
rz(3.5*pi) node[5];
sx node[6];
x node[7];
x node[0];
sx node[1];
ecr node[5],node[4];
rz(3.5*pi) node[7];
rz(3.5*pi) node[0];
x node[4];
sx node[5];
ecr node[7],node[6];
ecr node[0],node[1];
rz(3.5*pi) node[4];
rz(3.377053816524066*pi) node[5];
x node[6];
sx node[7];
x node[0];
sx node[1];
sx node[5];
rz(3.5*pi) node[6];
rz(3.5*pi) node[0];
ecr node[2],node[1];
rz(0.5*pi) node[5];
ecr node[6],node[7];
rz(1.4036927787247633*pi) node[1];
x node[2];
sx node[5];
sx node[6];
x node[7];
sx node[1];
rz(3.5*pi) node[2];
ecr node[4],node[5];
rz(3.5*pi) node[7];
ecr node[2],node[1];
sx node[4];
x node[5];
ecr node[7],node[6];
sx node[1];
x node[2];
rz(3.5*pi) node[5];
x node[6];
sx node[7];
ecr node[0],node[7];
rz(3.5*pi) node[2];
ecr node[5],node[4];
rz(3.5*pi) node[6];
x node[0];
x node[4];
sx node[5];
rz(3.4029463420416626*pi) node[7];
rz(3.5*pi) node[0];
rz(3.5*pi) node[4];
sx node[7];
ecr node[0],node[7];
ecr node[4],node[5];
sx node[0];
sx node[4];
sx node[5];
x node[7];
ecr node[6],node[5];
rz(3.5*pi) node[7];
ecr node[7],node[0];
rz(3.403699463232373*pi) node[5];
rz(3.097097805866471*pi) node[6];
x node[0];
sx node[5];
x node[6];
sx node[7];
rz(3.5*pi) node[0];
rz(3.5*pi) node[6];
ecr node[0],node[7];
ecr node[6],node[5];
sx node[0];
sx node[5];
sx node[6];
x node[7];
rz(3.377053816524066*pi) node[6];
rz(3.5*pi) node[7];
ecr node[7],node[0];
sx node[6];
x node[0];
rz(0.5*pi) node[6];
x node[7];
rz(3.5*pi) node[0];
sx node[6];
rz(3.5*pi) node[7];
ecr node[0],node[1];
ecr node[7],node[6];
sx node[0];
x node[1];
x node[6];
sx node[7];
rz(3.5*pi) node[1];
rz(3.5*pi) node[6];
ecr node[1],node[0];
ecr node[6],node[7];
x node[0];
sx node[1];
sx node[6];
x node[7];
rz(3.5*pi) node[0];
rz(3.5*pi) node[7];
ecr node[0],node[1];
ecr node[7],node[6];
x node[0];
sx node[1];
x node[6];
sx node[7];
rz(3.5*pi) node[0];
ecr node[2],node[1];
rz(3.5*pi) node[6];
rz(3.405266502802056*pi) node[1];
x node[2];
ecr node[6],node[5];
sx node[1];
rz(3.5*pi) node[2];
rz(3.4037080575992995*pi) node[5];
rz(3.0986759862821702*pi) node[6];
ecr node[2],node[1];
sx node[5];
x node[6];
sx node[1];
x node[2];
rz(3.5*pi) node[6];
ecr node[0],node[1];
rz(3.5*pi) node[2];
ecr node[6],node[5];
x node[0];
rz(1.4029695786633534*pi) node[1];
ecr node[2],node[3];
sx node[5];
sx node[6];
rz(3.5*pi) node[0];
sx node[1];
sx node[2];
x node[3];
rz(3.377053816524066*pi) node[6];
ecr node[0],node[1];
rz(3.5*pi) node[3];
sx node[6];
x node[0];
x node[1];
ecr node[3],node[2];
rz(0.5*pi) node[6];
rz(3.5*pi) node[0];
rz(3.5*pi) node[1];
x node[2];
sx node[3];
sx node[6];
rz(3.5*pi) node[2];
ecr node[2],node[3];
x node[3];
rz(3.5*pi) node[3];
ecr node[3],node[4];
sx node[3];
x node[4];
rz(3.5*pi) node[4];
ecr node[4],node[3];
x node[3];
sx node[4];
rz(3.5*pi) node[3];
ecr node[3],node[4];
x node[4];
rz(3.5*pi) node[4];
ecr node[4],node[5];
rz(3.105000803720642*pi) node[4];
rz(3.4037628068997234*pi) node[5];
x node[4];
sx node[5];
rz(3.5*pi) node[4];
ecr node[4],node[5];
sx node[4];
x node[5];
rz(3.377053816524066*pi) node[4];
rz(3.5*pi) node[5];
sx node[4];
ecr node[5],node[6];
rz(0.5*pi) node[4];
sx node[5];
x node[6];
rz(3.5*pi) node[6];
ecr node[6],node[5];
x node[5];
sx node[6];
rz(3.5*pi) node[5];
ecr node[5],node[6];
x node[6];
rz(3.5*pi) node[6];
ecr node[6],node[7];
sx node[6];
x node[7];
rz(3.5*pi) node[7];
ecr node[7],node[6];
x node[6];
sx node[7];
rz(3.5*pi) node[6];
ecr node[6],node[7];
sx node[7];
ecr node[0],node[7];
rz(3.0965313415930185*pi) node[0];
rz(3.4036892773160146*pi) node[7];
x node[0];
sx node[7];
rz(3.5*pi) node[0];
ecr node[0],node[7];
sx node[0];
x node[7];
rz(3.377053816524066*pi) node[0];
rz(3.5*pi) node[7];
sx node[0];
rz(0.5*pi) node[0];
sx node[0];
ecr node[7],node[0];
x node[0];
sx node[7];
rz(3.5*pi) node[0];
ecr node[0],node[7];
sx node[0];
x node[7];
rz(3.5*pi) node[7];
ecr node[7],node[0];
sx node[0];
ecr node[1],node[0];
rz(3.404299159057943*pi) node[0];
rz(3.159794126401513*pi) node[1];
sx node[0];
x node[1];
rz(3.5*pi) node[1];
ecr node[1],node[0];
rz(3.0981172887699406*pi) node[0];
sx node[1];
sx node[0];
rz(3.377053816524066*pi) node[1];
rz(3.377053816524066*pi) node[0];
sx node[1];
sx node[0];
rz(0.5*pi) node[1];
rz(0.5*pi) node[0];
barrier node[0],node[1],node[7],node[4],node[5],node[6],node[3];
measure node[0] -> meas[0];
measure node[1] -> meas[1];
measure node[7] -> meas[2];
measure node[4] -> meas[3];
measure node[5] -> meas[4];
measure node[6] -> meas[5];
measure node[3] -> meas[6];
